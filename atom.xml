<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yunvoo Blog</title>
  <subtitle>人生如路--&gt;须在荒凉中走出繁华的风景</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yunvoo.com/"/>
  <updated>2016-06-25T00:15:07.925Z</updated>
  <id>http://yunvoo.com/</id>
  
  <author>
    <name>yunvoo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>英国脱欧公投教会了你什么？</title>
    <link href="http://yunvoo.com//blog/2016/06/25/%E8%8B%B1%E5%9B%BD%E8%84%B1%E6%AC%A7%E5%85%AC%E6%8A%95%E6%95%99%E4%BC%9A%E4%BA%86%E4%BD%A0%E4%BB%80%E4%B9%88%EF%BC%9F.html"/>
    <id>http://yunvoo.com//blog/2016/06/25/英国脱欧公投教会了你什么？.html</id>
    <published>2016-06-25T00:09:06.000Z</published>
    <updated>2016-06-25T00:15:07.925Z</updated>
    
    <content type="html">&lt;p&gt;对于一个立志从事投资的人来说，尤其是宏观交易者，今天算是难得一见的盛况。无论英国脱欧与否，这几天的变化足以让人学到很多。面对宏观政治事件，要么全面规避风险，要么纵身投入豪赌。这取决于你是哪类人。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;英国脱欧&lt;/code&gt;公投，似乎是从事投资的人最关心，但英国脱欧公投本身不是一个简单的金融事件，其本质是一个宏观政治事件。影响重大的宏观政治事件除了影响到金融市场，更多会影响到社会形态和经济模式，只不过&lt;code&gt;金融市&lt;/code&gt;场最为敏感最容易产生波动而已。&lt;/p&gt;
&lt;p&gt;英国脱欧，欧洲格局势必重新塑造。英国脱欧后，英国未来将不再适用欧盟的一系列经济贸易等政策。同时，如果英国脱欧引发英国内部苏格兰、威尔士要脱离英国，很可能再度引发英国震动。此外，英国脱欧是全球民粹主义和社会思潮保守的先行信号，因此也不排除欧洲部分国家可能考虑脱欧。这一切都是一个从&lt;code&gt;平衡&lt;/code&gt;到&lt;code&gt;混乱&lt;/code&gt;再到寻求平衡的过程。混乱中很难去预测出一个相对可靠的&lt;code&gt;演进范式&lt;/code&gt;，唯一能预测的是混乱本身。&lt;/p&gt;
&lt;p&gt;这种混乱从英国脱欧公投前几天的变化就可以看出。起初各方预期英国脱欧概率较大，之后因&lt;code&gt;议员Cox枪击案&lt;/code&gt;而转向留欧概率增加，全球资本市场因此随之出现一波避险和修复风潮。然而在公投票仓揭晓过程中，又出现大逆转，脱欧票数一路领先，导致英镑大幅贬值，日元、美元和黄金等避险资产大涨。&lt;/p&gt;
&lt;p&gt;不得不说，要在这样的混乱中做出稳定盈利的投资策略并非易事，当年美国次贷危机和欧债危机都令大部分&lt;code&gt;宏观策略观点打脸&lt;/code&gt;。从概率上讲，大部分投资者将在这种事件中承受损失，除非你的策略只是规避风险。&lt;/p&gt;
&lt;p&gt;规避风险最简单的策略就是从风险资产中撤出，并买入避险资产，比如美元、日元、黄金和避险货币的国债。避险策略并非只赚不赔，只要有价格波动在，都可能产生盈利和亏损，只不过进入这些避险资产所承受的风险会远远小于风险资产。因此从策略制定和执行上讲，与其试图在混乱中制定可靠的盈利策略，不如对可能的风险退之三舍。如果根据策略分析师的看法，别说各分析师莫衷一是，即便是一个分析师，在这几天内也会反复修改观点，根本无益于配置策略本身。要知道，就算是博彩公司也有一天内180度的赔率逆转。&lt;/p&gt;
&lt;p&gt;大混乱也意味着大机会。宏观交易员热衷于在混乱中通过交易来博取盈利，这当然需要过人的胆识和技术，因为大混乱是一把&lt;code&gt;双刃剑&lt;/code&gt;，做对方向就能获得可观的&lt;code&gt;盈利&lt;/code&gt;，做错方向且无法及时止损就意味着血本无归。在最近几天的市场波动中，交易员的优势在于能够根据形势及时变化，前提是错误方向的头寸没有&lt;code&gt;下注太大&lt;/code&gt;，有足够的调头空间。今天一个上午英镑就有&lt;code&gt;超过10%的跌幅&lt;/code&gt;，中间还有数次2%以上的&lt;code&gt;振幅&lt;/code&gt;，这对于交易而言绝对是一次&lt;code&gt;严格的考验&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;每个人都有自己的&lt;code&gt;能力圈&lt;/code&gt;，有人擅长于大类&lt;code&gt;资产配置&lt;/code&gt;，面对宏观不确定时愿意选择规避风险，有人擅长于宏观交易，在大事件中承担风险奋力搏杀。虽然最终落脚点都是盈亏与否，但路径是完全不同的。面对&lt;code&gt;宏观不确定性&lt;/code&gt;，大部分人应该选择规避风险，除非你能够承担足够大的风险，而且经验丰富、手段老辣，而这种人毕竟是凤毛麟角。索罗斯会参与这场&lt;code&gt;豪赌&lt;/code&gt;，&lt;code&gt;巴菲特&lt;/code&gt;却绝不会涉足其中，索罗斯只有一个，巴菲特也只有一个。你，或许谁也不是。&lt;br&gt;&lt;strong&gt; 本文来自华尔街日报 &lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;对于一个立志从事投资的人来说，尤其是宏观交易者，今天算是难得一见的盛况。无论英国脱欧与否，这几天的变化足以让人学到很多。面对宏观政治事件，要么全面规避风险，要么纵身投入豪赌。这取决于你是哪类人。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;英国脱欧&lt;/code&gt;公投，似乎是从事投资的人最关心
    
    </summary>
    
      <category term="金融经济" scheme="http://yunvoo.com/categories/%E9%87%91%E8%9E%8D%E7%BB%8F%E6%B5%8E/"/>
    
    
      <category term="英国脱欧" scheme="http://yunvoo.com/tags/%E8%8B%B1%E5%9B%BD%E8%84%B1%E6%AC%A7/"/>
    
  </entry>
  
  <entry>
    <title>英国脱欧成功 中日冰火两重天</title>
    <link href="http://yunvoo.com//blog/2016/06/25/%E8%8B%B1%E5%9B%BD%E8%84%B1%E6%AC%A7%E6%88%90%E5%8A%9F-%E4%B8%AD%E6%97%A5%E5%86%B0%E7%81%AB%E4%B8%A4%E9%87%8D%E5%A4%A9.html"/>
    <id>http://yunvoo.com//blog/2016/06/25/英国脱欧成功-中日冰火两重天.html</id>
    <published>2016-06-24T23:59:21.000Z</published>
    <updated>2016-06-25T00:19:13.240Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;北京时间6月24日&lt;/code&gt;，英国成功脱离欧盟，其引发的连锁影响立时显现。6月24日下午，日元需求火山喷发，日元单日升值7.2%。外界认为，“安倍经济学”的基础建筑在日元贬值的基础上，日元升值将给日本经济以沉重的打击。&lt;/p&gt;
&lt;p&gt;日元升值的直接影响，是赴日旅游和日本代购将迎来冬天，日本产品的出口面临巨大压力。更为重要的是，安倍经济学的核心理念就是极为激进的宽松货币政策。安倍上台两月，日元贬值&lt;code&gt;超过9%&lt;/code&gt;。如今日元受外力刺激升值，&lt;code&gt;安倍经济学&lt;/code&gt;面临破产风险。&lt;/p&gt;
&lt;p&gt;更为关键的是，这可能不是短期的影响，英国脱欧对欧元的打击是长期的。由此引发的后果，是国际市场出卖欧元，买入美元、日元、人民币等其他国家的货币。安倍晋三如果想维持日元&lt;code&gt;贬值&lt;/code&gt;的态势，恐怕将付出比以前多数倍的代价。&lt;br&gt;&lt;strong&gt; 6月24日，英国脱欧公投出炉，英国脱离欧盟&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/624.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;与此形成对比的是，这对中国而言可能是利好的消息。众所周知，人民币近来面临着贬值的压力。据FT中文网报道，中国政府为了阻击人民币无序贬值，数月之间已经花费了至少&lt;code&gt;4370亿美元的外汇&lt;/code&gt;。欧元遭受打击，这提高了人民币的相对安全性，有利于人民币的升值。&lt;/p&gt;
&lt;p&gt;并且，欧盟近期将出台针对中国钢铁的惩罚性政策，这对中国钢铁的出口是巨大的打击。但现在英国脱欧成功，欧盟针对中国钢铁的惩罚性措施将不适用于中英两国之间。中国和英国会商讨两国间的贸易政策。在难以改变欧盟针对中国钢铁征收惩罚性关税的背景下，英国脱欧对&lt;code&gt;中国钢铁产业&lt;/code&gt;而言是利好的消息。&lt;/p&gt;
&lt;p&gt;外界认为，虽然从某些方面看，英国脱欧对日本不利对中国有利，但这只是就局部而言。从整体上看，英国脱欧之后，&lt;code&gt;英国到2018年GDP会下降1&lt;/code&gt;.3%，欧盟GDP占全球比重将从17%降至14.6%。欧洲的衰落，哪怕这种衰落是暂时的，也不利于中日两国对欧出口的增长。从全球范围看，英国脱欧的影响也是负面的。&lt;br&gt;&lt;strong&gt; 本文来自多维新闻 &lt;/strong&gt; &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;北京时间6月24日&lt;/code&gt;，英国成功脱离欧盟，其引发的连锁影响立时显现。6月24日下午，日元需求火山喷发，日元单日升值7.2%。外界认为，“安倍经济学”的基础建筑在日元贬值的基础上，日元升值将给日本经济以沉重的打击。&lt;/p&gt;
&lt;p&gt;日元升值的直接影响，是赴
    
    </summary>
    
      <category term="金融经济" scheme="http://yunvoo.com/categories/%E9%87%91%E8%9E%8D%E7%BB%8F%E6%B5%8E/"/>
    
    
      <category term="退欧" scheme="http://yunvoo.com/tags/%E9%80%80%E6%AC%A7/"/>
    
  </entry>
  
  <entry>
    <title>警言*名言</title>
    <link href="http://yunvoo.com//blog/2016/06/22/%E8%AD%A6%E8%A8%80-%E5%90%8D%E8%A8%80.html"/>
    <id>http://yunvoo.com//blog/2016/06/22/警言-名言.html</id>
    <published>2016-06-22T13:00:25.000Z</published>
    <updated>2016-06-23T07:10:55.945Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;这是最好的时代，这是最坏的时代，这是智慧的时代，这是愚蠢的时代；这是信仰的时期，这是怀疑的时期；这是光明的季节，这是黑暗的季节；这是希望之春，这是失望之冬；人们面前有着各样事物，人们面前一无所有；人们正在直登天堂；人们正在直下地狱。                                                 —– 狄更斯 《双城记》&lt;/p&gt;
&lt;p&gt;为增长而增长乃癌细胞生存之道                   —爱的华*艾比 (英国作家)&lt;/p&gt;
&lt;p&gt;一个人不论干什么事失掉恰当的时节 有利的时机就会全功尽弃      —柏拉图&lt;/p&gt;
&lt;p&gt;没有人能成功地预测市场的变化              — 格雷厄姆（投资家)&lt;/p&gt;
&lt;p&gt;现在一切美好的事物无一不是创新的结果        —穆勒（英国经济学家)&lt;/p&gt;
&lt;p&gt;有人因为贪婪想得到更多却把现有的也失掉了    —伊索（古希腊预言家)&lt;/p&gt;
&lt;p&gt;错误不可耻可耻的是错误已经是显而易见了 却还不去修正       —乔治* &amp;gt;                                                       索罗斯（美国投资家）&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是最好的时代，这是最坏的时代，这是智慧的时代，这是愚蠢的时代；这是信仰的时期，这是怀疑的时期；这是光明的季节，这是黑暗的季节；这是希望之春，这是失望之冬；人们面前有着各样事物，人们面前一无所有；人们正在直登天堂；人们正在直下地狱。        
    
    </summary>
    
      <category term="散文" scheme="http://yunvoo.com/categories/%E6%95%A3%E6%96%87/"/>
    
    
      <category term="名言" scheme="http://yunvoo.com/tags/%E5%90%8D%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>首超美国：中国自主芯片全球称雄</title>
    <link href="http://yunvoo.com//blog/2016/06/21/%E9%A6%96%E8%B6%85%E7%BE%8E%E5%9B%BD%EF%BC%9A%E4%B8%AD%E5%9B%BD%E8%87%AA%E4%B8%BB%E8%8A%AF%E7%89%87%E5%85%A8%E7%90%83%E7%A7%B0%E9%9B%84.html"/>
    <id>http://yunvoo.com//blog/2016/06/21/首超美国：中国自主芯片全球称雄.html</id>
    <published>2016-06-20T23:45:04.000Z</published>
    <updated>2016-06-23T11:19:15.618Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;本文来自多维新闻&lt;/code&gt;中国自主芯片制造的超级计算机首次荣登全球超级计算机500强榜首，对美国科技主导地位构成挑战，这也是中国尝试减少科技进口依赖的突破。此外中国超级计算机上榜总数量有史以来首次超过美国名列第一。&lt;/p&gt;
&lt;p&gt;据华尔街见闻网报道称，6月20日，新一期全球超级计算机500强榜单公布，使用中国自主芯片制造的“神威太湖之光”取代“天河二号”登上榜首。更重要的是，与“天河二号”使用英特尔芯片不一样，“神威太湖之光”使用的是中国自主知识产权的芯片。“神威太湖之光”的浮点运算速度为每秒9.3亿亿次，不仅速度比第二名“天河二号”快出近两倍，其效率也提高3倍。&lt;/p&gt;
&lt;p&gt;其声明中写道：“中国在国际TOP500组织第47期榜单上保持第一名的位置，凭借的是一个完全基于中国设计、制造处理器而打造的新系统。”&lt;/p&gt;
&lt;p&gt;“神威太湖之光”由国家并行计算机工程技术研究中心研制，安装在国家超级计算无锡中心。此前，由中国国防科技大学研制的“天河二号”超级计算机已在TOP500榜单上连续六度称雄。&lt;br&gt;&lt;strong&gt; 中国自主芯片制造的超级计算机荣登全球榜首 &lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/duowen.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;TOP500榜单是对全球已安装的超级计算机“排座次”的权威排行榜。从1993年起，由TOP500国际组织以实测计算速度为基准每半年发布一次。&lt;/p&gt;
&lt;p&gt;此次榜单还有一个重大变动是，美国入围的超级计算机总数量首次跌下第一位置。上述声明说，由于过去一些年中国工业和研究部门注册提交的系统数量剧增，中国现在入榜的超级计算机数量达到167台，超过美国的165台。此外，由于中国占据TOP榜单头两名，中国在计算性能类别上也居于领先位置。&lt;/p&gt;
&lt;p&gt;排行榜主要编撰人、美国田纳西大学计算机学教授Jack Dongarra评价道，2001年中国上榜数量还是零，但今天中国已经超过美国，没有其他国家有这样快的增长速度。&lt;/p&gt;
&lt;p&gt;他认为，超级计算机“比以往任何时候都重要”，能为能源、医药、飞机制造、汽车与娱乐业等广泛领域的行业提供高性能计算服务。“更强大的计算能力将使得这些不同行业更快地生产出优异新产品，从而提高一个国家的竞争力”。&lt;/p&gt;
&lt;p&gt;在计算机服务器领域，神威太湖之光的胜利对英特尔的主导权构成特别挑战。目前英特尔控制着96%的计算机服务器市场。&lt;/p&gt;
&lt;p&gt;超级计算机是能够执行一般个人电脑无法处理的大资料量与高速运算的电脑，其基本组成组件与个人电脑的概念无太大差异，但规格与性能强大许多，且价格昂贵又相对稀有。&lt;/p&gt;
&lt;p&gt;包括美国高通在内的其他芯片制造商正与中国的组织合作，在中国培养研究员。安谋国际科技（ARM Holdings）同样也想在中国市场分得一杯羹。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;本文来自多维新闻&lt;/code&gt;中国自主芯片制造的超级计算机首次荣登全球超级计算机500强榜首，对美国科技主导地位构成挑战，这也是中国尝试减少科技进口依赖的突破。此外中国超级计算机上榜总数量有史以来首次超过美国名列第一。&lt;/p&gt;
&lt;p&gt;据华尔街见闻网报道称，6月2
    
    </summary>
    
      <category term="金融经济" scheme="http://yunvoo.com/categories/%E9%87%91%E8%9E%8D%E7%BB%8F%E6%B5%8E/"/>
    
    
      <category term="芯片" scheme="http://yunvoo.com/tags/%E8%8A%AF%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>长期发展的团队和归属感</title>
    <link href="http://yunvoo.com//blog/2015/10/26/%E9%95%BF%E6%9C%9F%E5%8F%91%E5%B1%95%E7%9A%84%E5%9B%A2%E9%98%9F%E5%92%8C%E5%BD%92%E5%B1%9E%E6%84%9F.html"/>
    <id>http://yunvoo.com//blog/2015/10/26/长期发展的团队和归属感.html</id>
    <published>2015-10-25T16:00:00.000Z</published>
    <updated>2016-06-19T14:09:50.803Z</updated>
    
    <content type="html">&lt;h3 id=&quot;团队归属感&quot;&gt;&lt;a href=&quot;#团队归属感&quot; class=&quot;headerlink&quot; title=&quot;团队归属感&quot;&gt;&lt;/a&gt;团队归属感&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;想随波逐流的人大概都会梦想拥有一支信得过的可以一起奋斗的团队吧，我觉得这是人之常情。&lt;/p&gt;
&lt;p&gt;那么，自己喜欢怎么样的团队，以及怎样的团队才需要自己，这两个问题很可能会决定最终什么样的人聚在一起。&lt;/p&gt;
&lt;p&gt;这两个问题的本质，前者是感情，后者是实力，如果两者能达到统一，当然就会形成团队的归属感，团队成员互相之间才能容易平等的相处。可惜，现实往往很残酷。&lt;/p&gt;
&lt;p&gt;人的感情总是很多变，电视小说里面的那种天天拌嘴拆桥还能保持死党关系的朋友真是少的可怜。我所看到的，我的家人、朋友、同事，大家更能记住的是几年前的一次矛盾、互相攀比的妒恨和只谈利益的淡漠，和一个人保持好感情就不错了，要想几个人互相之间都无比和睦，实在有些痴人说梦。&lt;/p&gt;
&lt;p&gt;人或许越年轻越不在意感情纠葛，越年轻的人们越能够没心没肺的黏在一起，而年长之后，多数人似乎都选择记住种种不快，而不是选择忘记。&lt;/p&gt;
&lt;p&gt;没有感情那就只有实力了，可是实力是什么，是每分钟打100个字这种么？不是，是一种不方面直接量化的综合能力。大家不可避免的会进行攀比，会不断在团队之中结成更小的团体。大家就像蒲公英的种子，相聚只是为未来的分开留下伏笔，大家都在为今后的飞翔拼命准备自己的羽翼而已，滋养自己的蒲公英的未来才没人关心呢。&lt;/p&gt;
&lt;p&gt;去思考这些问题真是一件让我身心俱疲的事情。难怪那么多人还是愿意随波逐流，情愿一直盘踞在自己偶然飘落的土壤上不离开，无论土壤是否贫瘠、艰辛。&lt;/p&gt;
&lt;p&gt;可我还不愿这么简单就放弃啊，我也很想和大家一起燃烧自己，一起达到更好啊。为什么，我们这一群人就一定要分开？&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;团队归属感&quot;&gt;&lt;a href=&quot;#团队归属感&quot; class=&quot;headerlink&quot; title=&quot;团队归属感&quot;&gt;&lt;/a&gt;团队归属感&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;想随波逐流的人大概都会梦想拥有一支信得过的可以一起奋斗的团队吧，我觉得这是人之常情。&lt;/p
    
    </summary>
    
      <category term="散文" scheme="http://yunvoo.com/categories/%E6%95%A3%E6%96%87/"/>
    
    
      <category term="团队" scheme="http://yunvoo.com/tags/%E5%9B%A2%E9%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>IPFS 一个新的对等网络媒体协议</title>
    <link href="http://yunvoo.com//blog/2015/10/25/IPFS%20%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E5%AF%B9%E7%AD%89%E7%BD%91%E7%BB%9C%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE.html"/>
    <id>http://yunvoo.com//blog/2015/10/25/IPFS 一个新的对等网络媒体协议.html</id>
    <published>2015-10-24T16:00:00.000Z</published>
    <updated>2016-06-19T10:26:26.377Z</updated>
    
    <content type="html">&lt;h2 id=&quot;IPFS简介&quot;&gt;&lt;a href=&quot;#IPFS简介&quot; class=&quot;headerlink&quot; title=&quot;IPFS简介&quot;&gt;&lt;/a&gt;IPFS简介&lt;/h2&gt;&lt;p&gt;&lt;center&gt;&lt;br&gt;    &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfsIPFS.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;br&gt;    &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfs10.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h1 id=&quot;IPFS-The-InterPlanetary-File-System-是一种新的超媒体分发协议，按内容和身份解决。-IPFS能够完全的分布式应用程序的创建。它的目的是使网络更快，更安全，更开放。IPFS是由IPFS社区和许多贡献者来自开源社区开发的一个开源项目&quot;&gt;&lt;a href=&quot;#IPFS-The-InterPlanetary-File-System-是一种新的超媒体分发协议，按内容和身份解决。-IPFS能够完全的分布式应用程序的创建。它的目的是使网络更快，更安全，更开放。IPFS是由IPFS社区和许多贡献者来自开源社区开发的一个开源项目&quot; class=&quot;headerlink&quot; title=&quot;　　　IPFS(The InterPlanetary File System)是一种新的超媒体分发协议，按内容和身份解决。 IPFS能够完全的分布式应用程序的创建。它的目的是使网络更快，更安全，更开放。IPFS是由IPFS社区和许多贡献者来自开源社区开发的一个开源项目&quot;&gt;&lt;/a&gt;　　　IPFS(The InterPlanetary File System)是一种新的超媒体分发协议，按内容和身份解决。 IPFS能够完全的分布式应用程序的创建。它的目的是使网络更快，更安全，更开放。IPFS是由IPFS社区和许多贡献者来自开源社区开发的一个开源项目&lt;/h1&gt;&lt;h2 id=&quot;IPFS是怎样运行的&quot;&gt;&lt;a href=&quot;#IPFS是怎样运行的&quot; class=&quot;headerlink&quot; title=&quot;IPFS是怎样运行的　&quot;&gt;&lt;/a&gt;IPFS是怎样运行的　&lt;/h2&gt;&lt;p&gt;&lt;center&gt;&lt;br&gt;    &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfs11.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;br&gt;    &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfs12.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;br&gt;　　　IPFS旨在所有的计算设备与相同的文件系统连接一个对等网络的分布是文件系统。在某些方面，IPFS是类似于Web，但IPFS可以被看作一个单独的BitTorrent群，一个Git仓库内的交换对象。换句话说，IPFS提供了一种高通量内容寻址存储模式，与内容寻址链接，IPFS结合了分布式哈希表。IPFS具有无单一故障点，节点并不需要相互信任。&lt;/p&gt;
&lt;h2 id=&quot;下面是我在Linux安装体验了一下IPFS&quot;&gt;&lt;a href=&quot;#下面是我在Linux安装体验了一下IPFS&quot; class=&quot;headerlink&quot; title=&quot;下面是我在Linux安装体验了一下IPFS&quot;&gt;&lt;/a&gt;下面是我在Linux安装体验了一下IPFS&lt;/h2&gt;&lt;p&gt;　　　我将我安装过程分享给下家，感兴趣的话可以体验一下，保持一个好奇心！　我也是查资料看官方文档一步步了解的，希望大家多查查资料！我的是linux 64位的平台，Windows的没有试，感兴趣的可以试一试，效果都是一样的，官方提供的版本各个平台的都有！这是官网：【IPFS】（&lt;a href=&quot;https://ipfs.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://ipfs.io/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;关键的地方我给大家截图&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.去官网下载需要安装包&lt;a href=&quot;https://ipfs.io/docs/install/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;go-ipfs_v0.3.11_linux-amd64.tar.gz&lt;/a&gt; 进行解压 安装&lt;center&gt;&lt;br&gt;  &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfs1.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;br&gt;&lt;center&gt;&lt;br&gt;  &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfs2.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;/li&gt;
&lt;li&gt;2.安装Go  &lt;a href=&quot;https://golang.org/dl/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Download Go 1.5.2+&lt;/a&gt;(注意版本 IPFS官方支持的版本 更高的版本暂时不支持！）解压到指定的目录 自己可以定，这里需要用到环境变量的！配置环境变量 编辑文件 vim /etc/profile&lt;br&gt;&lt;center&gt;&lt;br&gt;  &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfs5.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;br&gt;在里面添加：&lt;br&gt;export PATH=$PATH:/usr/local/go/bin&lt;br&gt;export PATH=$PATH:$GOPATH/bin&lt;br&gt;&lt;center&gt;&lt;br&gt;  &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfs4.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;br&gt;这个文件一般是linux系统中存在，是在开机加载系统是或用的登录时执行的一个配置文件，其主要功能类似初始化一些环境变量，定义一些自动执行的功能如果对其进行修改后让其生效的方法执行  &lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;source /etc/profile   &lt;/li&gt;
&lt;li&gt;./etc/profile   &lt;/li&gt;
&lt;li&gt;重启系统，或退出登录后再重新登录&lt;br&gt;查看环境变量是否有错，有错会给你报错的！&lt;center&gt;&lt;br&gt; &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfs6.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;3.为GOPATH环境变量设置工作空间，可以选择编写一个GO语言的hello world测试一下！非必须！只要一步步来一般情况下不会出错！照着做就行了！&lt;center&gt;&lt;br&gt;  &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfs%E5%B0%8F%E7%A8%8B%E5%BA%8F.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;/li&gt;
&lt;li&gt;4.至此环境搭建完了！详细搭建请参照官网说明吧！ 可以执行 IPFS命令感受一下了！&lt;br&gt;&lt;center&gt;&lt;br&gt;  &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfs7.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;br&gt;&lt;center&gt;&lt;br&gt;  &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ipfs9.png&quot; align=&quot;center&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;/center&gt;&lt;br&gt;&lt;strong&gt;更多命令可以到官网资料手册！IPFS我也是最多了解有这么个东西！关于这方面的有兴趣的可以官网&lt;a href=&quot;https://ipfs.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; https://ipfs.io&lt;/a&gt;， github 这是github  &lt;a href=&quot;https://github.com/RichardLitt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; https://github.com/RichardLitt&lt;/a&gt;查相关资料，我也是不懂啊！见谅啦！&lt;/strong&gt;  &lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;IPFS简介&quot;&gt;&lt;a href=&quot;#IPFS简介&quot; class=&quot;headerlink&quot; title=&quot;IPFS简介&quot;&gt;&lt;/a&gt;IPFS简介&lt;/h2&gt;&lt;p&gt;&lt;center&gt;&lt;br&gt;    &lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb
    
    </summary>
    
      <category term="技术" scheme="http://yunvoo.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="IPFS，协议" scheme="http://yunvoo.com/tags/IPFS%EF%BC%8C%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>Death March</title>
    <link href="http://yunvoo.com//blog/2015/10/23/Death.March.html"/>
    <id>http://yunvoo.com//blog/2015/10/23/Death.March.html</id>
    <published>2015-10-22T16:00:00.000Z</published>
    <updated>2016-06-19T14:00:03.277Z</updated>
    
    <content type="html">&lt;h3 id=&quot;首先说明该篇文章来自互联网&quot;&gt;&lt;a href=&quot;#首先说明该篇文章来自互联网&quot; class=&quot;headerlink&quot; title=&quot;首先说明该篇文章来自互联网&quot;&gt;&lt;/a&gt;首先说明该篇文章来自互联网&lt;/h3&gt;&lt;p&gt;该文章是我无意中读到的深有感触就记录下来，DeathMarch 也有其它的含义我有在维基百科读了一篇内容不一样&lt;a href=&quot;https://en.wikipedia.org/wiki/Death_march&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Death March&lt;/a&gt;还有这个&lt;a href=&quot;http://www.cnblogs.com/hzbook/archive/2011/11/14/2248544.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;blog&lt;/a&gt; 以下就是原文:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Death March 在项目管理领域里指的是看不到尽头的项目，在这个项目中的每个人都会最终被整个拖沓的状态磨去意志，只剩每天重复的做一些可有可无的事情。&lt;/p&gt;
&lt;p&gt;Death March 所描述的这种惨状其实每天都可以在身边看到。如果把人生等同于一个项目，那么这个项目本身就很容易满足 Death March 所有条件。&lt;/p&gt;
&lt;p&gt;首先是尽头，极少人知道这个项目的尽头为何。&lt;/p&gt;
&lt;p&gt;当大多数人以为生命还很长而不断挥霍的时候，他们其实已经在 Death March 中磨去了锐气，试图忘记灰色的未来带给他们的恐怖。关键时间点的缺失是 Death March 项目的共同特征，在中国，走出学校之后有多少人能真的去考虑一下未来的时间表呢，恐怕少之又少。活在当下是无脑的幸福，这种做法让不幸不断的发酵、压缩最终集中爆发，在生命的最后一段时间会让人生活在绝望的自责之中。&lt;/p&gt;
&lt;p&gt;其次是目的，生命的意义本身就非常的暧昧不清，这是个无解的谜题。&lt;/p&gt;
&lt;p&gt;人和其他动物一样，都会死亡，也都会惧怕死亡。人与其他动物所不同的是，知性的头脑让这种恐惧变得更加深刻，甚至会在生命还尚处盛年的时候就开始为未来忧郁。因为生命必然有尽头而且意义不明，迈向死亡的倒计时每天奔走不息，人们想要驱散这种恐惧就必须让自己忘记，将自己的时间用一些看似有意义的琐事充斥，生怕自己闲下来胡思乱想。正如处于 Death March 状态的项目总会做一些毫无针对性的任务一样，这种做法就是想驱散负面情绪，而实际意义为零。&lt;/p&gt;
&lt;p&gt;最后是结果，人逃脱不了死亡，处于 Death March 中的项目也逃脱不了戛然而止的命运。&lt;/p&gt;
&lt;p&gt;人总是从年轻到年老，不可复返。当年近迟暮，人所能做的事情慢慢变少，身上的各种不适不断增多，生活质量显著下降。可悲的是，多数人直到最后的尽头都保持着一个人类的头脑，他们会害怕，会因为身体的无能而绝望。其实大脑只是整个身体的一小部分，知性则是大脑中被称作“智脑”的薄薄的一小片区域，“智脑”不能有效控制任何无意识机能，无论是循环系统、消化系统还是肌肉系统，“智脑”总是会在无意识的“旧脑”之后得到消息，要想支配这些系统还必须通过“旧脑”来完成，当“智脑”无法灵活控制身体，知性会慢慢开始崩溃。在这种情况下，人就是 Death Match 项目中的项目经理，面对这种不可控的现状，还不如早些结束更轻松呢。 &lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;首先说明该篇文章来自互联网&quot;&gt;&lt;a href=&quot;#首先说明该篇文章来自互联网&quot; class=&quot;headerlink&quot; title=&quot;首先说明该篇文章来自互联网&quot;&gt;&lt;/a&gt;首先说明该篇文章来自互联网&lt;/h3&gt;&lt;p&gt;该文章是我无意中读到的深有感触就记录下来，Death
    
    </summary>
    
      <category term="散文" scheme="http://yunvoo.com/categories/%E6%95%A3%E6%96%87/"/>
    
    
      <category term="死亡三月" scheme="http://yunvoo.com/tags/%E6%AD%BB%E4%BA%A1%E4%B8%89%E6%9C%88/"/>
    
  </entry>
  
  <entry>
    <title>CEO的能力</title>
    <link href="http://yunvoo.com//blog/2015/10/20/CEO%E7%9A%84%E8%83%BD%E5%8A%9B.html"/>
    <id>http://yunvoo.com//blog/2015/10/20/CEO的能力.html</id>
    <published>2015-10-19T16:00:00.000Z</published>
    <updated>2016-06-19T13:30:21.921Z</updated>
    
    <content type="html">&lt;h2 id=&quot;CEO-能力其一是决断力。&quot;&gt;&lt;a href=&quot;#CEO-能力其一是决断力。&quot; class=&quot;headerlink&quot; title=&quot;CEO 能力其一是决断力。&quot;&gt;&lt;/a&gt;CEO 能力其一是决断力。&lt;/h2&gt;&lt;p&gt;创业似大海航行，陆地往往仅存于心，无人能确保陆地就在前方，也不知这路上是否有暗礁恶浪，数月过后若不达预期，团队内部难免心生迷惘，需要 CEO 做出一些关键决策，坚定前行抑或改弦易张。&lt;/p&gt;
&lt;p&gt;平庸的 CEO 兴许会随波逐流，顺势而为不失一种做法，但这纯拼运气，除非大势颇佳，否则便是慢性自杀；怯懦的 CEO 将关键决策权下放给他人，自己则一心从众，美名曰“民主”，实则缺乏胆识。半吊子的 CEO 会不断做出“关键决策”，每个方向都举棋不定，结果在内耗中错失良机乃至弹尽粮绝而亡。&lt;/p&gt;
&lt;p&gt;既谓之关键决策，必然风险与收益双高，此时必定众说纷纭，无万全之策。有决断力的 CEO 需从所有声音——包括自己心声——中甄别出最值得确信的一个，力排众议并坚决执行。&lt;/p&gt;
&lt;h2 id=&quot;CEO-能力其二是眼光。&quot;&gt;&lt;a href=&quot;#CEO-能力其二是眼光。&quot; class=&quot;headerlink&quot; title=&quot;CEO 能力其二是眼光。&quot;&gt;&lt;/a&gt;CEO 能力其二是眼光。&lt;/h2&gt;&lt;p&gt;创业者所创之业必是他人尚未充分开发之地，或崭新或模糊或凶险。同时，创业过程也需不断适时调整船头，CEO 的眼光可确保方向基本无误。&lt;/p&gt;
&lt;p&gt;眼光犹如视力，可有近视和远视两种毛病。若过于近视，则会增加误判，有大概率迷失方向；若过于远视，则看不清当下忧患，或未捷先死。&lt;/p&gt;
&lt;p&gt;眼光还取决于视野。若终年身藏深谷，往往患有以管窥豹、一目障叶或夜郎自大的毛病，就算视力良好也可能产生严重误判。&lt;/p&gt;
&lt;h2 id=&quot;CEO-能力其三是协调力。&quot;&gt;&lt;a href=&quot;#CEO-能力其三是协调力。&quot; class=&quot;headerlink&quot; title=&quot;CEO 能力其三是协调力。&quot;&gt;&lt;/a&gt;CEO 能力其三是协调力。&lt;/h2&gt;&lt;p&gt;常言道，CEO 乃孤独身，不任人唯亲，也不顾此失彼。团队能成“团”皆因 CEO 撮合，但凡内部因人因事因利产生裂痕，CEO 需有所作为。&lt;/p&gt;
&lt;p&gt;协调力即对人的驾驭力，“与人斗，其乐无穷”。单纯的 CEO 或想以无为治之，以为坦诚相待便可感化众人，却不料反倒积怨，内斗颇多而不自知。虽公司政治不可取，但唯有政治可扼杀政治，CEO 自身需深谙权术且不醉心。&lt;/p&gt;
&lt;p&gt;协调力还体现为管控力，若公司内有失控之处，必然无法恰如其分的协调。CEO 不可能十项全能，必有具体事项委派与人且不过问细节，如何能持续控制局势不被欺瞒，此为艺术而非技术。&lt;/p&gt;
&lt;p&gt;以上三种能力需兼备，方能成为优秀 CEO。人无完人，不求面面俱到，但求三种必备能力皆在常人之上。毕竟 CEO 乃万中挑一之人才，此种期待不应为过。&lt;/p&gt;
&lt;p&gt;如何鉴定这些能力是否超常？去聊，去接触，自然能懂。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;善哉，甄别 CEO 也为一种能力，空谈无用，在现实中感悟吧。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;CEO-能力其一是决断力。&quot;&gt;&lt;a href=&quot;#CEO-能力其一是决断力。&quot; class=&quot;headerlink&quot; title=&quot;CEO 能力其一是决断力。&quot;&gt;&lt;/a&gt;CEO 能力其一是决断力。&lt;/h2&gt;&lt;p&gt;创业似大海航行，陆地往往仅存于心，无人能确保陆地就在
    
    </summary>
    
      <category term="散文" scheme="http://yunvoo.com/categories/%E6%95%A3%E6%96%87/"/>
    
    
      <category term="CEO" scheme="http://yunvoo.com/tags/CEO/"/>
    
  </entry>
  
  <entry>
    <title>linux多进程处理函数</title>
    <link href="http://yunvoo.com//blog/2015/10/03/linux%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0.html"/>
    <id>http://yunvoo.com//blog/2015/10/03/linux多进程处理函数.html</id>
    <published>2015-10-02T16:00:00.000Z</published>
    <updated>2016-06-19T06:41:39.076Z</updated>
    
    <content type="html">&lt;h2 id=&quot;wait-的阻塞问题&quot;&gt;&lt;a href=&quot;#wait-的阻塞问题&quot; class=&quot;headerlink&quot; title=&quot;wait()的阻塞问题&quot;&gt;&lt;/a&gt;wait()的阻塞问题&lt;/h2&gt;&lt;p&gt;父进程为了获取子进程的’SIGSTOP、SIGTERM’等信号时，由于调用了’wait()’函数而导致主进程一直在阻塞中，在使劲的开发中，应该特别注意，主进程在等待子进程的状态变化是还会有其他的事情进行处理,所以需要一种异步回调机制，让主进程可以在执行其它任务的时候，又可以监听到子进程的进程状态变化时及时处理。&lt;/p&gt;
&lt;h2 id=&quot;signal-函数讲解&quot;&gt;&lt;a href=&quot;#signal-函数讲解&quot; class=&quot;headerlink&quot; title=&quot;signal()函数讲解&quot;&gt;&lt;/a&gt;signal()函数讲解&lt;/h2&gt;&lt;p&gt;&lt;code&gt;signal()&lt;/code&gt;函数原型如下:&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;signal.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(*&lt;span class=&quot;keyword&quot;&gt;sighandler_t&lt;/span&gt;)&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sighandler_t&lt;/span&gt; signal(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; signum,&lt;span class=&quot;keyword&quot;&gt;sighandler_t&lt;/span&gt; handler);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;typedef&lt;/code&gt;定义了一类函数名叫&lt;code&gt;sighandler_t&lt;/code&gt;是指要监听的进程状态的变量信号，所有可以监听的信号的定义可以同&lt;code&gt;sys/signal.h&lt;/code&gt;头文件中查阅到。本文的demeo中要处理的信号量有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SIGSTOP:发送给父进程的，表示子进程被外部命令暂停，命令可以是&lt;code&gt;kill&lt;/code&gt;,也开始是&lt;code&gt;top&lt;/code&gt;中操作。&lt;/li&gt;
&lt;li&gt;SIGCHLD：发送给父进程的，表示子进程被外部命令暂停或已经执行完毕退出了。这是需要父进程执行&lt;code&gt;wait&lt;/code&gt;函数让子进程从&lt;code&gt;僵尸进程&lt;/code&gt;状态彻底被系统回收.&lt;/li&gt;
&lt;li&gt;SIGWINCH:程序窗口大小发生变换，在中断命令下执行运行可执行文件时用鼠标拖动一下窗口即可获取此信号。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;signal&lt;/code&gt;函数第二个参数是指定&lt;code&gt;signum&lt;/code&gt;的处理函数，该函数的唯一参数将会被赋值为被指定的 信号量。在此函数中可以调用&lt;code&gt;wait&lt;/code&gt;或者其他处理逻辑，也可以赋值为系统的&lt;code&gt;SIG_IGN或者SIG_DFL&lt;/code&gt;函数，分别表示忽略和默认处理方式，但是信号量&lt;code&gt;SIGKILL及SIGSTOP&lt;/code&gt;的处理方式是不能被忽略处理的。&lt;br&gt;当自定义了信号量处理函数后，所监听的信号被捕获，则该信号会被设置为阻塞&lt;code&gt;blocked&lt;/code&gt;，然后再执行处理函数中的逻辑，处理函数执行完毕后，信号量恢复为未阻塞状态&lt;code&gt;unblock&lt;/code&gt;。&lt;br&gt;&lt;code&gt;signal()&lt;/code&gt;函数正常执行，返回值为&lt;code&gt;signum&lt;/code&gt;的原有处理函数；否则出错返回&lt;code&gt;SIG_ER&lt;/code&gt;,并且可以处理通过&lt;code&gt;ERRNO&lt;/code&gt;来查看错误原因&lt;br&gt;&lt;code&gt;signal()&lt;/code&gt;函数在不同的Unxi或Linux版本之间存在较大的差异，所以一般崔村&lt;code&gt;sigaction()&lt;/code&gt;函数来替换。本文不涉及&lt;code&gt;sigaction&lt;/code&gt;的内容。&lt;/p&gt;
&lt;h2 id=&quot;示例代码&quot;&gt;&lt;a href=&quot;#示例代码&quot; class=&quot;headerlink&quot; title=&quot;示例代码&quot;&gt;&lt;/a&gt;示例代码&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;接下来演示`signal()`函数的使用，代码示例总依然用到了对标准输出流的重定向**`freeopen`**。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;signal.c&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;cpp&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;signal.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;sys/wait.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;errno.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifndef&lt;/span&gt; getSigName&lt;/span&gt;
&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; getSigName(sig) (((sig) == SIGCHLD)?&lt;span class=&quot;string&quot;&gt;&quot;SIGCHLD&quot;&lt;/span&gt;:(((sig) == SIGCONT)?&lt;span class=&quot;string&quot;&gt;&quot;SIGCONT&quot;&lt;/span&gt;:(((sig) == SIGTERM)?&lt;span class=&quot;string&quot;&gt;&quot;SIGTERM&quot;&lt;/span&gt;:(((sig) == SIGWINCH)?&lt;span class=&quot;string&quot;&gt;&quot;SIGWINCH&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;))))&lt;/span&gt;
&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printTime&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;time_t&lt;/span&gt; calendar_time = time(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);
    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; tm * tm_local = localtime(&amp;amp;calendar_time);
    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;str_f_t&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;];
    strftime(&lt;span class=&quot;keyword&quot;&gt;str_f_t&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;str_f_t&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&quot;%G-%m-%d %H:%M:%S&quot;&lt;/span&gt;, tm_local);
    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s &quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;str_f_t&lt;/span&gt;);
}
&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleSignal&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sig)&lt;/span&gt; &lt;/span&gt;{
    printTime();
    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;PID=%d handleSignal %s=%d\n&quot;&lt;/span&gt;, getpid(), getSigName(sig), sig);
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sig == SIGCHLD || sig == SIGTERM) {
        &lt;span class=&quot;comment&quot;&gt;// 子进程被暂停或退出了(包括按逻辑执行结束及被kill)&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; status = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;
        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; childPid = waitpid(&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;, &amp;amp;status, WUNTRACED|WCONTINUED);
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (childPid == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;) {
            printTime();
            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Parent w=-1, error=%s \n&quot;&lt;/span&gt;, strerror(errno));
        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ifExited, ifSignaled, ifStopped, ifContinued;

            ifExited = WIFEXITED(status);
            ifSignaled = WIFSIGNALED(status);
            ifStopped = WIFSTOPPED(status);
            ifContinued = WIFCONTINUED(status);

            printTime();
            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;pid=%ld child=%d exitCode=%d status=%d ifExited=%d ifSignaled=%d ifStopped=%d ifContinued=%d \n&quot;&lt;/span&gt;,
                   (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)getpid(), childPid, status, _WSTATUS(childPid), ifExited, ifSignaled, ifStopped, ifContinued);

            printTime();
            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ifExited) {
                &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;PID=%ld exited, status=%d\n&quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)childPid, WEXITSTATUS(status));
            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ifSignaled) {
                &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;PID=%ld killed by signal %d\n&quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)childPid, WTERMSIG(status));
            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ifStopped) {
                &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;PID=%ld stopped by signal %d\n&quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)childPid, WSTOPSIG(status));
            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ifContinued) {
                &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;PID=%ld continued\n&quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)childPid);
            }
        }
    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sig == SIGCONT) {
        &lt;span class=&quot;comment&quot;&gt;// sigcont在本人的mac上调用wait是无效的&lt;/span&gt;
        &lt;span class=&quot;comment&quot;&gt;// do nothing&lt;/span&gt;
    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sig == SIGWINCH) {
        &lt;span class=&quot;comment&quot;&gt;// do nothing&lt;/span&gt;
    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {
        printTime();
        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;sig=%d is not valid.\n&quot;&lt;/span&gt;, sig);
    }
}
&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;mainProcessDoSomething&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FILE* f)&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;
    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {
        sleep(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (f != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;){
            fflush(f);
        }
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (count ++ &amp;gt; &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) {
            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;
        }
    }
}
&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;comment&quot;&gt;/*11*/&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; ** argv) {

    &lt;span class=&quot;comment&quot;&gt;// SIGWINCH：应用程序窗口发生变化&lt;/span&gt;
    signal(SIGWINCH, &amp;amp;handleSignal);

    &lt;span class=&quot;comment&quot;&gt;// 子进程被暂停运行&lt;/span&gt;
    signal(SIGSTOP, &amp;amp;handleSignal);
    &lt;span class=&quot;comment&quot;&gt;// 子进程被恢复运行(Mac上无效..)&lt;/span&gt;
    signal(SIGCONT, &amp;amp;handleSignal);
    &lt;span class=&quot;comment&quot;&gt;// SIGCHLD：子进程被暂停或退出了(包括按逻辑执行结束及被kill)&lt;/span&gt;
    signal(SIGCHLD, &amp;amp;handleSignal);
    &lt;span class=&quot;comment&quot;&gt;// 不建议对SIGTERM进行设置&lt;/span&gt;
    &lt;span class=&quot;comment&quot;&gt;// signal(SIGTERM, &amp;amp;handleSignal);&lt;/span&gt;

    &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pId = fork();
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pId == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;) {
        perror(&lt;span class=&quot;string&quot;&gt;&quot;fork error&quot;&lt;/span&gt;);
        &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;(EXIT_FAILURE);
    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pId == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {
        FILE* fChild = freopen(&lt;span class=&quot;string&quot;&gt;&quot;/Users/sodino/workspace/xcode/Define/Define/child_signal.txt&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;w&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;stdout&lt;/span&gt;);
        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; myPid = getpid();
        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; parentPid = getppid();

        printTime();
        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Child:SelfID=%d ParentID=%d \n&quot;&lt;/span&gt;, myPid, parentPid);
        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;
        &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;{
            count ++;
            sleep(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);
            printTime();
            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Child:count=%d \n&quot;&lt;/span&gt;, count);
            fflush(fChild);
            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (count &amp;gt;= &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) {
                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;
            }
        }&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);
        printTime();
        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Child:SelfID=%d exit success.\n&quot;&lt;/span&gt;, myPid);
        fflush(fChild);
        fclose(fChild);
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; EXIT_SUCCESS;
    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {
        FILE * fMain = freopen(&lt;span class=&quot;string&quot;&gt;&quot;/Users/sodino/workspace/xcode/Define/Define/main_signal.txt&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;w&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;stdout&lt;/span&gt;);
        printTime();
        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Parent:SelfID=%d MyChildPID=%d \n&quot;&lt;/span&gt;, getpid(), pId);
        fflush(fMain);

        &lt;span class=&quot;comment&quot;&gt;// 继续往下执行其它任务，而不像原逻辑 会被wait()所阻塞&lt;/span&gt;
        mainProcessDoSomething(fMain);

        printTime();
        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Parent:SelfID=%d exit success.\n&quot;&lt;/span&gt;, getpid());

        fflush(fMain);
        fclose(fMain);
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; EXIT_SUCCESS;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上代码中，在&lt;code&gt;main()&lt;/code&gt;函数一开始，就对&lt;code&gt;SIGWINCH、SIGCHLD&lt;/code&gt;进行监听，统一注册其处理函数为&lt;code&gt;handleSignal(int)&lt;/code&gt;。然后执行&lt;code&gt;fork()&lt;/code&gt;生成子进程。&lt;br&gt;handleSignal(int)函数中会对监听到的信号量做出打印及输出，如果是SIGSTOP、SIGCHLD的话则会执行wait以获取子进程状态。&lt;br&gt;在主进程中，以mainProcessDoSomething()函数来表示父进程的其它工作任务，不被wait所阻塞。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;wait-的阻塞问题&quot;&gt;&lt;a href=&quot;#wait-的阻塞问题&quot; class=&quot;headerlink&quot; title=&quot;wait()的阻塞问题&quot;&gt;&lt;/a&gt;wait()的阻塞问题&lt;/h2&gt;&lt;p&gt;父进程为了获取子进程的’SIGSTOP、SIGTERM’等信号时，由于调
    
    </summary>
    
      <category term="技术" scheme="http://yunvoo.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="linux 多进程" scheme="http://yunvoo.com/tags/linux-%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>引导工具GRUB</title>
    <link href="http://yunvoo.com//blog/2015/08/07/%E5%BC%95%E5%AF%BC%E5%B7%A5%E5%85%B7GRUB.html"/>
    <id>http://yunvoo.com//blog/2015/08/07/引导工具GRUB.html</id>
    <published>2015-08-06T16:00:00.000Z</published>
    <updated>2016-06-25T11:32:48.658Z</updated>
    
    <content type="html">&lt;h2 id=&quot;引导工具GRUB详解&quot;&gt;&lt;a href=&quot;#引导工具GRUB详解&quot; class=&quot;headerlink&quot; title=&quot;引导工具GRUB详解&quot;&gt;&lt;/a&gt;引导工具GRUB详解&lt;/h2&gt;&lt;p&gt;&lt;strong&gt; 引导程序是驻留在硬盘第一个扇区（MPR、主引导记录）的程序。GRUB是一个功能强大的多系统引导程序，专门处理Linux与其它操作系统共存的问题。下面就由我介绍一下grub.conf文件里的具体内容及其含义。 &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;#vi /boot/grub/menu.lst&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# grub.conf generated by anaconda                                                                                  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#                                                                                                                  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Note that you &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; not have to rerun grub after making changes to &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; file                                        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# NOTICE:  You have a /boot partition.  This means that                                                            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#          all kernel and initrd paths are relative to /boot/, eg.                                                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#          root (hd0,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)                                                                                            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#          kernel /vmlinuz-version ro root=/dev/sda2                                                               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#          initrd /initrd-[generic-]version.img                                                                    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#boot=/dev/sda                                                                                                     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;                                                                                                          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timeout=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;                                                                                                          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;splashimage=(hd0,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)/grub/splash.xpm.gz                                                                             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hiddenmenu                                                                                                         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title Red Hat Enterprise Linux (&lt;span class=&quot;number&quot;&gt;2.6&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.32&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-358.&lt;/span&gt;el6.x86_64)                                                             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    root (hd0,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)                                                                                                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    kernel /vmlinuz&lt;span class=&quot;number&quot;&gt;-2.6&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.32&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-358.&lt;/span&gt;el6.x86_64 ro root=UUID=&lt;span class=&quot;number&quot;&gt;3660&lt;/span&gt;ec98&lt;span class=&quot;number&quot;&gt;-9913&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-4&lt;/span&gt;b61-b1b2-d1a8071a8953 rd_NO_LUKS  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_MD crashkernel=&lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;M LANG=zh_CN.UTF&lt;span class=&quot;number&quot;&gt;-8&lt;/span&gt; rd_NO_LVM rd_NO_DM rhgb quiet                       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				    initrd /initramfs&lt;span class=&quot;number&quot;&gt;-2.6&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.32&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-358.&lt;/span&gt;el6.x86_64.img&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;default=0&lt;h1 id=&quot;default后加一个数字n，表示n-1个“title”操作系统，0表示第一个“title”-的操作系统，以此类推。&quot;&gt;&lt;a href=&quot;#default后加一个数字n，表示n-1个“title”操作系统，0表示第一个“title”-的操作系统，以此类推。&quot; class=&quot;headerlink&quot; title=&quot;default后加一个数字n，表示n+1个“title”操作系统，0表示第一个“title” 的操作系统，以此类推。&quot;&gt;&lt;/a&gt;default后加一个数字n，表示n+1个“title”操作系统，0表示第一个“title” 的操作系统，以此类推。&lt;/h1&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;timeout=0&lt;h1 id=&quot;timeout表示默认的等待时间，此处设置为0表示开机后系统将自动载入默认的操作系统。&quot;&gt;&lt;a href=&quot;#timeout表示默认的等待时间，此处设置为0表示开机后系统将自动载入默认的操作系统。&quot; class=&quot;headerlink&quot; title=&quot;timeout表示默认的等待时间，此处设置为0表示开机后系统将自动载入默认的操作系统。&quot;&gt;&lt;/a&gt;timeout表示默认的等待时间，此处设置为0表示开机后系统将自动载入默认的操作系统。&lt;/h1&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;splashimage=(hd0,3)/boot/grub/splash.xpm.gz&lt;h1 id=&quot;指定GRUB引导时使用的屏幕图像文件存放的路径。&quot;&gt;&lt;a href=&quot;#指定GRUB引导时使用的屏幕图像文件存放的路径。&quot; class=&quot;headerlink&quot; title=&quot;指定GRUB引导时使用的屏幕图像文件存放的路径。&quot;&gt;&lt;/a&gt;指定GRUB引导时使用的屏幕图像文件存放的路径。&lt;/h1&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;hiddenmenu&lt;h1 id=&quot;隐藏菜单选项&quot;&gt;&lt;a href=&quot;#隐藏菜单选项&quot; class=&quot;headerlink&quot; title=&quot;隐藏菜单选项&quot;&gt;&lt;/a&gt;隐藏菜单选项&lt;/h1&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;title Red Hat Enterprise Linux (2.6.32-220.e16.i686)&lt;h1 id=&quot;title定义启动菜单项的名称，title-后面的字符串就是在菜单项上显示的选项。&quot;&gt;&lt;a href=&quot;#title定义启动菜单项的名称，title-后面的字符串就是在菜单项上显示的选项。&quot; class=&quot;headerlink&quot; title=&quot;title定义启动菜单项的名称，title 后面的字符串就是在菜单项上显示的选项。&quot;&gt;&lt;/a&gt;title定义启动菜单项的名称，title 后面的字符串就是在菜单项上显示的选项。&lt;/h1&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;root(hd,0)&lt;h1 id=&quot;设置GRUB的根分区，是-boot对应的分区或boot文件夹所在的分区。&quot;&gt;&lt;a href=&quot;#设置GRUB的根分区，是-boot对应的分区或boot文件夹所在的分区。&quot; class=&quot;headerlink&quot; title=&quot;设置GRUB的根分区，是/boot对应的分区或boot文件夹所在的分区。&quot;&gt;&lt;/a&gt;设置GRUB的根分区，是/boot对应的分区或boot文件夹所在的分区。&lt;/h1&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;kernel /vmkinuz-2.6.32-220.e16.i686 ro root=UUID=d67e208c-2791-4692-a615-c4e96b6ae355 rd_NO…… rd_NO_DM&lt;h1 id=&quot;指定内核文件（vmkinuz-2-6-32-220-e16-i686）与要挂载的根设备（root-UUID-d67e208c-2791-4692-a615-c4e96b6ae355）-，ro是readonly的意思。&quot;&gt;&lt;a href=&quot;#指定内核文件（vmkinuz-2-6-32-220-e16-i686）与要挂载的根设备（root-UUID-d67e208c-2791-4692-a615-c4e96b6ae355）-，ro是readonly的意思。&quot; class=&quot;headerlink&quot; title=&quot;指定内核文件（vmkinuz-2.6.32-220.e16.i686）与要挂载的根设备（root=UUID=d67e208c-2791-4692-a615-c4e96b6ae355） ，ro是readonly的意思。&quot;&gt;&lt;/a&gt;指定内核文件（vmkinuz-2.6.32-220.e16.i686）与要挂载的根设备（root=UUID=d67e208c-2791-4692-a615-c4e96b6ae355） ，ro是readonly的意思。&lt;/h1&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;8.initrd /initramfs-2.6.32-220.e16.i686.img&lt;/p&gt;
&lt;h1 id=&quot;指定初始化内存映像盘。&quot;&gt;&lt;a href=&quot;#指定初始化内存映像盘。&quot; class=&quot;headerlink&quot; title=&quot;指定初始化内存映像盘。&quot;&gt;&lt;/a&gt;指定初始化内存映像盘。&lt;/h1&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引导工具GRUB详解&quot;&gt;&lt;a href=&quot;#引导工具GRUB详解&quot; class=&quot;headerlink&quot; title=&quot;引导工具GRUB详解&quot;&gt;&lt;/a&gt;引导工具GRUB详解&lt;/h2&gt;&lt;p&gt;&lt;strong&gt; 引导程序是驻留在硬盘第一个扇区（MPR、主引导记录）的程序
    
    </summary>
    
      <category term="linux" scheme="http://yunvoo.com/categories/linux/"/>
    
    
      <category term="GRUB" scheme="http://yunvoo.com/tags/GRUB/"/>
    
  </entry>
  
  <entry>
    <title>静态绑定和动态绑定</title>
    <link href="http://yunvoo.com//blog/2015/08/06/%E9%9D%99%E6%80%81%E7%BB%91%E5%AE%9A%E5%92%8C%E5%8A%A8%E6%80%81%E7%BB%91%E5%AE%9A.html"/>
    <id>http://yunvoo.com//blog/2015/08/06/静态绑定和动态绑定.html</id>
    <published>2015-08-05T16:00:00.000Z</published>
    <updated>2016-06-23T11:16:59.066Z</updated>
    
    <content type="html">&lt;h2 id=&quot;绑定&quot;&gt;&lt;a href=&quot;#绑定&quot; class=&quot;headerlink&quot; title=&quot;绑定&quot;&gt;&lt;/a&gt;绑定&lt;/h2&gt;&lt;p&gt;所谓&lt;code&gt;绑定(binding)&lt;/code&gt;即变量在运行期的存在，即是变量名字和它的实际内存位置的映射关系。存在，是个时空概念，变量同样有它的作用域(scope)和生存期(extent)。对词法变量而已，它具有词法作用域和不确定的(indefinite)的生存期，这表示一个词法变量只能在一个函数或一个block内存在，它的绑定只在一段代码区域内有效，但从时间上来讲，它可以在任意的时间里持续存在，只是取决于该变量需要使用(reference)多久；而动态变量正好相反，它具有不确定的作用域，这表示一个动态变量可以在任意地方出现，只是取决于你在什么地方绑定它，同时它有着动态(dynamic)的生存期，这表示当绑定该变量的代码执行完毕，该绑定就失效了，也就意味着该变量失效了。这两种截然不同的绑定方式，即被称作静态绑定(lexical binding)和动态绑定(dynamic binding)。&lt;/p&gt;
&lt;h2 id=&quot;动态绑定和静态绑定&quot;&gt;&lt;a href=&quot;#动态绑定和静态绑定&quot; class=&quot;headerlink&quot; title=&quot;动态绑定和静态绑定&quot;&gt;&lt;/a&gt;动态绑定和静态绑定&lt;/h2&gt;&lt;p&gt;这里介绍一下动态变量和动态绑定，elisp里的变量有三种：全局变量(比如defvar)、buffer-local变量(比如make-local-variable)和局部变量(比如let、let*)，前两者的作用域和生存期是伴随着Emacs和buffer全局存在的，采用的是动态绑定的方式。&lt;/p&gt;
&lt;p&gt;需要额外说明的是局部变量，局部变量分两种：函数参数和let表达式里绑定的变量，由于let也可以展开成lambda表达式，所以后者也可以认为是一种函数参数。下边考察一下局部变量的作用域和生存期，看一下info里的一个例子：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defun binder (x)   ; `x&#39; is bound in `binder&#39;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (foo 5))          ; `foo&#39; is some other function.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(defun user ()      ; `x&#39; is used &quot;free&quot; in `user&#39;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (list x))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 如果你只接触过词法绑定的语言，你能想象到函数user可以访问函数binder的参数x吗？这完全不可能嘛。但是在elisp里这却是可能的，如果你定义了这样一个函数：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defun foo (lose)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (user))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当你调用binder的时候，user是能够访问x的，这就是所谓的不确定的作用域，也就是说在任何位置都可能访问一个变量名。&lt;br&gt;再看一个lambda表达式的例子：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defun make-add (n)                ; Return a function.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (function (lambda (m) (+ n m)))) ; =&amp;gt; make-add&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(fset &#39;add2 (make-add 2))          ; Define function `add2&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   ; =&amp;gt; (lambda (m) (+ n m))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(add2 4)                           ; Try to add 2 to 4.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; 这里用lambda定义了一个高阶函数make-add，但是很不幸，这段代码无法正确运行，因为elisp里局部变量的生存期是动态的，只有当绑定了这个变量的表达式运行时该绑定才是有效的；当脱离了创建它的环境，它的生命周期也就结束了。所以，当make-add函数返回的时候，变量n也就同时失效了。这就是所谓的动态的生存期，也就是说绑定只在运行时有效。&lt;/p&gt;
&lt;p&gt;从上面这个例子也可以看出来，动态的生存期最糟糕的一点，就是不支持闭包。所谓闭包，必须在函数和局部变量之间保持关联，这些局部变量的作用域仅限于函数之内，但它不确定的生存期却可以使其跨越函数的运行边界。确切的说，只要该变量被引用，它就会一直存在，最后，没有引用的变量将被垃圾回收。&lt;br&gt;&lt;strong&gt; 在目前的release版本里，你只能用一些辅助办法模拟闭包：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defun make-add (n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (lexical-let ((nn n))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #&#39;(lambda (m) (+ m nn))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;lexical-let这个辅助函数作用就是把模拟闭包内的局部变量生成一个唯一变量名(make-symbol)添加到一个全局列表(cl-closure-vars)里去，这样该局部变量的生存期将伴随整个Emacs进程，而且由于是唯一变量名，它也不会在别处绑定，这样看起来该变量就可以脱离函数运行时环境存在了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;而最近被合并的lexbind分支，由于支持了词法绑定，则可以真正提供闭包支持了，具体做法是在文件头声明：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;;; -*- lexical-binding: t -*-&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么dynamic binding和lexical binding分别有什么应用场景呢？&lt;/p&gt;
&lt;p&gt;&lt;em&gt;想象这样一个场景：&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(let ((b (generate-&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;-buffer-name &lt;span class=&quot;string&quot;&gt;&quot;*string-output*&quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (let ((standard-output b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (foo))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-buffer b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ;; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; stuff with the output of foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (kill-buffer b))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你生成一个名为 “string-output” 的临时&lt;code&gt;buffer&lt;/code&gt;，然后你调用&lt;code&gt;foo函数&lt;/code&gt;，它会向&lt;code&gt;buffer&lt;/code&gt;里输出一些内容，然后你再对输出内容做一些处理。&lt;/p&gt;
&lt;p&gt;借助于变量名的动态绑定，你可以直接在foo里操作standard-output，甚至是在所有foo调用的函数里。而在仅支持lexical binding的语言里，你将不得不把&lt;code&gt;standard-output&lt;/code&gt;作为一个&lt;code&gt;参数&lt;/code&gt;传递给foo，甚至所有调用的函数。&lt;/p&gt;
&lt;p&gt;当然，这样做也有风险。手册建议不要滥用动态绑定的能力，否则，最后也许自己都弄不懂你目前修改的这个局部变量引用自哪里，会对哪些函数造成影响了。&lt;/p&gt;
&lt;p&gt;在实现方面，动态绑定的缺点很明显，它的实现有两种&lt;code&gt;深绑定(deep binding)&lt;/code&gt;和&lt;code&gt;浅绑定(shallow binding)&lt;/code&gt;：&lt;br&gt; 深绑定在传参的时候绑定变量，变量和值作为一个&lt;code&gt;pair&lt;/code&gt;，保存到一个&lt;code&gt;关联数组&lt;/code&gt;里。&lt;br&gt; 浅绑定在函数被实际调用的时候绑定变量，当前的变量和值对保存在一个&lt;code&gt;cell&lt;/code&gt;里，而老的值会&lt;code&gt;push&lt;/code&gt;到一个&lt;code&gt;栈&lt;/code&gt;里维护。&lt;br&gt;两种方式都需要维护全局的状态，当进入和脱离作用域的时候，都需要查询这些变量的状态，以确定绑定关系。另外，不确定的作用域对多线程设计和中断设计都增加了复杂度。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;静态绑定&lt;/code&gt;的优点却有很多：&lt;br&gt; 便于用户书写，因为不用考虑不确定的作用域带来的运行时环境的影响；&lt;br&gt; 便于&lt;code&gt;编译器优化&lt;/code&gt;，因为&lt;code&gt;变量存&lt;/code&gt;在于一个确定的词法上下文，而不用判断更多的可能性；* 词法作用域在编译期就可以确定的，避免了更多的运行时&lt;code&gt;开销&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt; &lt;em&gt;有这些原因，导致了越来越多的现代语言摒弃了&lt;code&gt;动态绑定&lt;/code&gt;而转向了&lt;code&gt;静态绑定&lt;/code&gt;。&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;绑定&quot;&gt;&lt;a href=&quot;#绑定&quot; class=&quot;headerlink&quot; title=&quot;绑定&quot;&gt;&lt;/a&gt;绑定&lt;/h2&gt;&lt;p&gt;所谓&lt;code&gt;绑定(binding)&lt;/code&gt;即变量在运行期的存在，即是变量名字和它的实际内存位置的映射关系。存在，是个时空概念，变量
    
    </summary>
    
      <category term="技术" scheme="http://yunvoo.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="静态和动态绑定" scheme="http://yunvoo.com/tags/%E9%9D%99%E6%80%81%E5%92%8C%E5%8A%A8%E6%80%81%E7%BB%91%E5%AE%9A/"/>
    
  </entry>
  
  <entry>
    <title>什么是bootloader</title>
    <link href="http://yunvoo.com//blog/2015/08/06/bootloader.html"/>
    <id>http://yunvoo.com//blog/2015/08/06/bootloader.html</id>
    <published>2015-08-05T16:00:00.000Z</published>
    <updated>2016-06-22T10:26:46.726Z</updated>
    
    <content type="html">&lt;h2 id=&quot;什么是bootloader&quot;&gt;&lt;a href=&quot;#什么是bootloader&quot; class=&quot;headerlink&quot; title=&quot;什么是bootloader?&quot;&gt;&lt;/a&gt;什么是bootloader?&lt;/h2&gt;&lt;p&gt;引导程序（英语：boot loader）位于电脑或其他计算机应用上，是指引导操作系统启动的程序。引导程序引导方式及程序视应用机型种类而不同。例如在普通的个人电脑上，引导程序通常分为两部分：第一阶段引导程序位于主引导记录（MBR），用以引导位于某个分区上的第二阶段引导程序，如NTLDR、BOOTMGR和GNU GRUB等。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BIOS&lt;/code&gt;开机完成后，bootloader就接手初始化硬件设备、创建内存空间的映射，以便为操作系统内核准备好正确的软硬件环境。&lt;/p&gt;
&lt;p&gt;简单的&lt;code&gt;bootloader&lt;/code&gt;的虚拟汇编码，如其后的八个指令：&lt;/p&gt;
&lt;p&gt;第一：将P寄存器的值设为8&lt;br&gt;第二：检查纸带（paper tape）读取器，是否已经可以进行读取&lt;br&gt;第三：如果还不能进行读取，跳至1&lt;br&gt;第四：从纸带读取器，读取一byte至累加器&lt;br&gt;第五：如为带子结尾，跳至8&lt;br&gt;第六：将寄存器的值，存储至P寄存器中的数值所指定的地址&lt;br&gt;第七：增加P寄存器的值&lt;br&gt;第八：跳至1&lt;br&gt;但是随着计算机操作系统越来越复杂，位于主引导记录的空间已经放不下引导操作系统的代码，于是就有了第二阶段的引导程序，而MBR中代码的功能也从直接引导操作系统变为了引导第二阶段的引导程序。&lt;br&gt;  &lt;code&gt;BootLoader是在操作系统内核运行之前运行的一段小程序。其实Bootloader就相当于手机的&lt;/code&gt;bios&lt;code&gt;，通过这段小程序，进行硬件初始化，获取内存大小信息等，调整手机到适配所以Bootloader是很重要的，如果bootloader不能正常加载，手机就是砖头一个，无法正常启动和使用。&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是bootloader&quot;&gt;&lt;a href=&quot;#什么是bootloader&quot; class=&quot;headerlink&quot; title=&quot;什么是bootloader?&quot;&gt;&lt;/a&gt;什么是bootloader?&lt;/h2&gt;&lt;p&gt;引导程序（英语：boot loader）位于电脑
    
    </summary>
    
      <category term="技术" scheme="http://yunvoo.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="bootloader" scheme="http://yunvoo.com/tags/bootloader/"/>
    
  </entry>
  
  <entry>
    <title>容器、迭代器、算法概念</title>
    <link href="http://yunvoo.com//blog/2015/06/08/%E5%AE%B9%E5%99%A8*%E8%BF%AD%E4%BB%A3%E5%99%A8-%E7%AE%97%E6%B3%95%E6%A6%82%E5%BF%B5.html"/>
    <id>http://yunvoo.com//blog/2015/06/08/容器*迭代器-算法概念.html</id>
    <published>2015-06-07T16:00:00.000Z</published>
    <updated>2016-06-25T02:53:08.339Z</updated>
    
    <content type="html">&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;p&gt;STL（Standard Template Library，标准模板库)是惠普实验室开发的一系列软件的统称。现然主要出现在C++中，但在被引入C++之前该技术就已经存在了很长的一段时间。&lt;br&gt;STL的从广义上讲分为三类：algorithm（算法）、container（容器）和iterator（迭代器），容器和算法通过迭代器可以进行无缝地连接。几乎所有的代码都采 用了模板类和模板函数的方式，这相比于传统的由函数和类组成的库来说提供了更好的代码重用机会。在C++标准中，STL被组织为下面的13个头文件:&lt;br&gt;&lt;code&gt;algorithm&lt;/code&gt;，&lt;code&gt;deque&lt;/code&gt;，&lt;code&gt;functional&lt;/code&gt;，&lt;code&gt;iterator&lt;/code&gt;，&lt;code&gt;vector&lt;/code&gt;，&lt;code&gt;list&lt;/code&gt;，&lt;code&gt;map&lt;/code&gt;，&lt;code&gt;memory&lt;/code&gt;，&lt;code&gt;numeric&lt;/code&gt;，&lt;code&gt;queue&lt;/code&gt;，&lt;code&gt;set&lt;/code&gt;，&lt;code&gt;stack&lt;/code&gt; 和&lt;code&gt;utility&lt;/code&gt;。&lt;br&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/stl.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;STL详细的说有六大组件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器（Container）&lt;/li&gt;
&lt;li&gt;算法（Algorithm）&lt;/li&gt;
&lt;li&gt;迭代器（Iterator）&lt;/li&gt;
&lt;li&gt;仿函数（Function object）&lt;/li&gt;
&lt;li&gt;适配器（Adaptor）&lt;/li&gt;
&lt;li&gt;空间适配器（allocator）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;** 使用STL的好处&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.STL是C++的一部分，因此不用额外安装什么，它被内建在你的编译器之内。&lt;/li&gt;
&lt;li&gt;2.STL的一个重要特点是数据结构和算法的分离。尽管这是个简单的概念，但是这种分离确实使得STL变得非常通用。&lt;br&gt;例如，在STL的vector容器中，可以放入元素、基础数据类型变量、元素的地址；&lt;br&gt;STL的sort()函数可以用来操作vector,list等容器。&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;程序员可以不用思考STL具体的实现过程，只要能够熟练使用STL就OK了。这样他们就可以把精力放在程序开发的别的方面。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;4.STL具有高可重用性，高性能，高移植性，跨平台的优点。&lt;br&gt;高可重用性：STL中几乎所有的代码都采用了模板类和模版函数的方式实现，这相比于传统的由函数和类组成的库来说提供了更好的代码重用机会。关于模板的知识，已经给大家介绍了。&lt;br&gt;高性能：如map可以高效地从十万条记录里面查找出指定的记录，因为map是采用红黑树的变体实现的。(红黑树是平横二叉树的一种)&lt;br&gt;高移植性：如在项目A上用STL编写的模块，可以直接移植到项目B上。&lt;br&gt;跨平台：如用windows的Visual Studio编写的代码可以在Mac OS的XCode上直接编译。&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;程序员可以不用思考STL具体的实现过程，只要能够熟练使用STL就OK了。这样他们就可以把精力放在程序开发的别的方面。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;6.了解到STL的这些好处，我们知道STL无疑是最值得C++程序员骄傲的一部分。每一个C＋＋程序员都应该好好学习STL。只有能够熟练使用STL的程序员，才是好的C++程序员。&lt;/li&gt;
&lt;li&gt;7.总之：招聘工作中，经常遇到C++程序员对STL不是非常了解。大多是有一个大致的映像，而对于在什么情况下应该使用哪个容器和算法都感到比较茫然。STL是C++程序员的一项不可或缺的基本技能，掌握它对提升C++编程大有裨益。&lt;h2 id=&quot;容器&quot;&gt;&lt;a href=&quot;#容器&quot; class=&quot;headerlink&quot; title=&quot;容器&quot;&gt;&lt;/a&gt;容器&lt;/h2&gt;在实际的开发过程中，数据结构本身的重要性不会逊于操作于数据结构的算法的重要性，当程序中存在着对时间要求很高的部分时，数据结构的选择就显得更加重要。&lt;br&gt;　　经典的数据结构数量有限，但是我们常常重复着一些为了实现向量、链表等结构而编写的代码，这些代码都十分相似，只是为了适应不同数据的变化而在 细节上有所出入。STL容器就为我们提供了这样的方便，它允许我们重复利用已有的实现构造自己的特定类型下的数据结构，通过设置一些模板，STL容器对最常用的数据结构提供了支持，这些模板的参数允许我们指定容器中元素的数据类型，可以将我们许多重复而乏味的工作简化。&lt;br&gt;容器部分主要由头文 件&lt;vector&gt;,&lt;list&gt;,&lt;deque&gt;,&lt;set&gt;,&lt;map&gt;,&lt;stack&gt; 和&lt;queue&gt;组成。对于常用的一些容器和容器适配器（可以看作由其它容器实现的容器），可以通过下表总结一下它们和相应头文件的对应关系。&lt;h3 id=&quot;容器的概念&quot;&gt;&lt;a href=&quot;#容器的概念&quot; class=&quot;headerlink&quot; title=&quot;容器的概念&quot;&gt;&lt;/a&gt;容器的概念&lt;/h3&gt;&lt;strong&gt; 用来管理一组元素 &lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/vector.png&quot; alt=&quot;&quot;&gt;&lt;h3 id=&quot;容器的分类&quot;&gt;&lt;a href=&quot;#容器的分类&quot; class=&quot;headerlink&quot; title=&quot;容器的分类&quot;&gt;&lt;/a&gt;容器的分类&lt;/h3&gt;&lt;/queue&gt;&lt;/stack&gt;&lt;/map&gt;&lt;/set&gt;&lt;/deque&gt;&lt;/list&gt;&lt;/vector&gt;&lt;/li&gt;
&lt;li&gt;1.序列式容器（Sequence containers）&lt;br&gt;每个元素都有固定位置－－取决于插入时机和地点，和元素值无关。&lt;br&gt;vector、deque、list  &lt;/li&gt;
&lt;li&gt;2.关联式容器（Associated containers）&lt;br&gt;元素位置取决于特定的排序准则，和插入顺序无关&lt;br&gt;set、multiset、map、multimap&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据结构&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;描述&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;实现头文件&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;向量(vector)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;连续存储的元素&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;vector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列表(list)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;有节点组成的双向链表,每个节点包含着一个元素&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;双队列(deque)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;连续存储的指向不同元素的指针所组成的数组&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;deque&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;集合(set)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;有节点组成的红黑树，每个节点都包含着一元素,节点之间以某种作用元素对的微词排列，没有两个不同的元素能够拥有相同的次序&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;set&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;多重集合(multiset)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;允许存在两个次序相等的元素的集合&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;set&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;栈(stack)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;后进先出的值排列&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;stack&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;队列(queue)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;先进先出的值的排列&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;queue&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;优先队列(priority_queue)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;元素的次序是由作用域所存储的值对上的某种谓词排列&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;queue&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;映射&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;由 键 ，值 对组成的集合，以某种作用域键对上的谓词排列&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;map&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;多重映射&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;允许键对有相等的次序的映射&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;map&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;迭代器&quot;&gt;&lt;a href=&quot;#迭代器&quot; class=&quot;headerlink&quot; title=&quot;迭代器&quot;&gt;&lt;/a&gt;迭代器&lt;/h2&gt;&lt;p&gt;迭代器从作用上来说是最基本的部分，可是理解起来比前两者都要费力一些。软件设计有一个基本原则，所有的问题都可以通过引进一个间接层来简化， 这种简化在STL中就是用迭代器来完成的。概括来说，迭代器在STL中用来将算法和容器联系起来，起着一种黏和剂的作用。几乎STL提供的所有算法都是通 过迭代器存取元素序列进行工作的，每一个容器都定义了其本身所专有的迭代器，用以存取容器中的元素。&lt;br&gt;　　迭代器部分主要由头文件&lt;utility&gt;,&lt;iterator&gt;和&lt;memory&gt;组 成。&lt;utility&gt;是一个很小的头文件，它包括了贯穿使用在STL中的几个模板的声明，&lt;iterator&gt;中提供了迭代器 使用的许多方法，而对于&lt;memory&gt;的描述则十分的困难，它以不同寻常的方式为容器中的元素分配存储空间，同时也为某些算法执行期间产生 的临时对象提供机制,&lt;memory&gt;中的主要部分是模板类allocator，它负责产生所有容器中的默认分配器。&lt;/memory&gt;&lt;/memory&gt;&lt;/iterator&gt;&lt;/utility&gt;&lt;/memory&gt;&lt;/iterator&gt;&lt;/utility&gt;&lt;/p&gt;
&lt;h2 id=&quot;算法&quot;&gt;&lt;a href=&quot;#算法&quot; class=&quot;headerlink&quot; title=&quot;算法&quot;&gt;&lt;/a&gt;算法&lt;/h2&gt;&lt;p&gt;函数库对数据类型的选择对其可重用性起着至关重要的作用。举例来说，一个求方根的函数，在使用浮点数作为其参数类型的情况下的可重用性肯定比使 用整型作为它的参数类性要高。而C++通过模板的机制允许推迟对某些类型的选择，直到真正想使用模板或者说对模板进行特化的时候，STL就利用了这一点提 供了相当多的有用算法。它是在一个有效的框架中完成这些算法的——可以将所有的类型划分为少数的几类，然后就可以在模版的参数中使用一种类型替换掉同一种 类中的其他类型。&lt;br&gt;　　STL提供了大约100个实现算法的模版函数，比如算法for_each将为指定序列中的每一个元素调用指定的函数，stable_sort以 你所指定的规则对序列进行稳定性排序等等。这样一来，只要熟悉了STL之后，许多代码可以被大大的化简，只需要通过调用一两个算法模板，就可以完成所需要 的功能并大大地提升效率。&lt;br&gt;算法部分主要由头文件&lt;algorithm&gt;，&lt;numeric&gt;和&lt;functional&gt;组 成。&lt;algorithm&gt;是所有STL头文件中最大的一个（尽管它很好理解），它是由一大堆模版函数组成的，可以认为每个函数在很大程度上 都是独立的，其中常用到的功能范围涉及到比较、交换、查找、遍历操作、复制、修改、移除、反转、排序、合并等等。&lt;numeric&gt;体积很 小，只包括几个在序列上面进行简单数学运算的模板函数，包括加法和乘法在序列上的一些操作。&lt;functional&gt;中则定义了一些模板类， 用以声明函数对象。&lt;/functional&gt;&lt;/numeric&gt;&lt;/algorithm&gt;&lt;/functional&gt;&lt;/numeric&gt;&lt;/algorithm&gt;&lt;/p&gt;
&lt;h2 id=&quot;C-标准库&quot;&gt;&lt;a href=&quot;#C-标准库&quot; class=&quot;headerlink&quot; title=&quot;C++标准库&quot;&gt;&lt;/a&gt;C++标准库&lt;/h2&gt;&lt;p&gt;C++强大的功能来源于其丰富的类库及库函数资源。C++标准库的内容总共在50个标准头文件中定义。在C++开发中，要尽可能地利用标准库完 成。这样做的直接好处包括：（1）成本：已经作为标准提供，何苦再花费时间、人力重新开发呢；（2）质量：标准库的都是经过严格测试的，正确性有保证； （3）效率：关于人的效率已经体现在成本中了，关于代码的执行效率要相信实现标准库的大牛们的水平；（4）良好的编程风格：采用行业中普遍的做法进行开发。&lt;br&gt;在C++程序设计课程中，尤其是作为第一门程序设计课程，我们注重了语法、语言的机制等方面的内容。程序设计能力的培养有个过程，跨过基本的原 理性知识直接进入到工程中的普遍做法，由于跨度决定了其难度。再者，在掌握了基本原理的基础上，在认识标准库的问题上完全可以凭借实践，逐步地掌握。标准 库的学习不需要认认真真地读书，需要的是在了解概貌的情况下，在实践中深入&lt;/p&gt;
&lt;h2 id=&quot;程序&quot;&gt;&lt;a href=&quot;#程序&quot; class=&quot;headerlink&quot; title=&quot;程序&quot;&gt;&lt;/a&gt;程序&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;vector&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;algorithm&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//容器中装 基础数据类型变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main11&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; v1; &lt;span class=&quot;comment&quot;&gt;//1 容器：把元素copy到容器中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v1.push_back(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v1.push_back(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v1.push_back(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v1.push_back(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//2 迭代器：相当于一个指针 分类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;::iterator it = v1.begin(); it != v1.end(); it++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//3 算法   算法和迭代器 进行无缝的连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num1 = count(v1.begin(), v1.end(), &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;//查找容器中等于3的个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;num1:&quot;&lt;/span&gt; &amp;lt;&amp;lt; num1 &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Teacher&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; name[&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printT&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;age:&quot;&lt;/span&gt; &amp;lt;&amp;lt; age &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//容器中装元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main12&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Teacher t1, t2, t3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	t1.age = &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	t2.age = &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	t3.age = &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;Teacher&amp;gt; v1; &lt;span class=&quot;comment&quot;&gt;// 1容器: 把你的元素copy到容器中  //容器实现了 数据类型 和算法的有效分离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v1.push_back(t1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v1.push_back(t2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v1.push_back(t3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//2 迭代器： 相当于一个指针分类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;Teacher&amp;gt;::iterator it = v1.begin(); it != v1.end(); it++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; it-&amp;gt;age &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//容器中 装 元素 装指针 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main13&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Teacher  t1, t2, t3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	t1.age = &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	t2.age = &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	t3.age = &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Teacher *p1, *p2, *p3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p1 = &amp;amp;t1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p2 = &amp;amp;t2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p3 = &amp;amp;t3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;Teacher *&amp;gt;  v1; &lt;span class=&quot;comment&quot;&gt;// 1容器: 把t1 t2 t3内存首地址 放入到了容器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v1.push_back(p1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v1.push_back(p2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v1.push_back(p3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//2迭代器: 相当于一个指针 分类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;Teacher *&amp;gt;::iterator it = v1.begin(); it != v1.end(); it++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; (*it)-&amp;gt;age &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//main11();// 容器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//main12();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	main13();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;hello...&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	system(&lt;span class=&quot;string&quot;&gt;&quot;pause&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;模板简要回顾&quot;&gt;&lt;a href=&quot;#模板简要回顾&quot; class=&quot;headerlink&quot; title=&quot;模板简要回顾&quot;&gt;&lt;/a&gt;模板简要回顾&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;    模板是实现代码重用机制的一种工具，实质就是实现类型参数化，即把类型定义为参数&lt;/li&gt;
&lt;li&gt;    函数模板就是建立一个通用的函数，其函数返回类型和形参类型不具体指定，而是用虚拟的类型来代表。&lt;/li&gt;
&lt;li&gt;    凡是函数体相同的函数都可以用函数模板来代替，不必定义多个函数，只需在模板中定义一次即可。&lt;/li&gt;
&lt;li&gt;    在调用函数时系统会根据实参的类型来取代模板中的虚拟类型，从而实现了不同函数的功能。&lt;/li&gt;
&lt;li&gt;    和函数模板一样，类模板就是建立一个通用类，其数据成员的类型、成员函数的返回类型和参数类形都可以不具体指定，而用虚拟的类型来代表。&lt;/li&gt;
&lt;li&gt;    当使用类模板建立对象时，系统会根据实参的类型取代类模板中的虚拟类型，从而实现不同类的功能。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;p&gt;STL（Standard Template Library，标准模板库)是惠普实验室开发的一系列软件的统称。现然主要出现在C
    
    </summary>
    
      <category term="c/c++" scheme="http://yunvoo.com/categories/c-c/"/>
    
    
      <category term="STL" scheme="http://yunvoo.com/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title>几张网络编程图</title>
    <link href="http://yunvoo.com//blog/2015/06/07/%E5%87%A0%E5%BC%A0%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%9B%BE.html"/>
    <id>http://yunvoo.com//blog/2015/06/07/几张网络编程图.html</id>
    <published>2015-06-06T16:00:00.000Z</published>
    <updated>2016-06-25T10:17:31.045Z</updated>
    
    <content type="html">&lt;h2 id=&quot;TCP&quot;&gt;&lt;a href=&quot;#TCP&quot; class=&quot;headerlink&quot; title=&quot;TCP&quot;&gt;&lt;/a&gt;TCP&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/TCP.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;TCP报文段的首部格式&quot;&gt;&lt;a href=&quot;#TCP报文段的首部格式&quot; class=&quot;headerlink&quot; title=&quot;TCP报文段的首部格式&quot;&gt;&lt;/a&gt;TCP报文段的首部格式&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/TCP%E6%8A%A5%E6%96%87%E6%AE%B5%E7%9A%84%E9%A6%96%E9%83%A8%E6%A0%BC%E5%BC%8F.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;socket连接图&quot;&gt;&lt;a href=&quot;#socket连接图&quot; class=&quot;headerlink&quot; title=&quot;socket连接图&quot;&gt;&lt;/a&gt;socket连接图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/socket%E8%BF%9E%E6%8E%A5%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;协议&quot;&gt;&lt;a href=&quot;#协议&quot; class=&quot;headerlink&quot; title=&quot;协议&quot;&gt;&lt;/a&gt;协议&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/%E5%8D%8F%E8%AE%AE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;断开连接状态&quot;&gt;&lt;a href=&quot;#断开连接状态&quot; class=&quot;headerlink&quot; title=&quot;断开连接状态&quot;&gt;&lt;/a&gt;断开连接状态&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/%E6%96%AD%E5%BC%80%E8%BF%9E%E6%8E%A5%E7%8A%B6%E6%80%81.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;ARP工作流程&quot;&gt;&lt;a href=&quot;#ARP工作流程&quot; class=&quot;headerlink&quot; title=&quot;ARP工作流程&quot;&gt;&lt;/a&gt;ARP工作流程&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/ARP%20%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;TCP&quot;&gt;&lt;a href=&quot;#TCP&quot; class=&quot;headerlink&quot; title=&quot;TCP&quot;&gt;&lt;/a&gt;TCP&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/TCP.png&quot; alt=&quot;&quot;&gt;&lt;/
    
    </summary>
    
      <category term="linux" scheme="http://yunvoo.com/categories/linux/"/>
    
    
      <category term="网络编程" scheme="http://yunvoo.com/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>对于拖延症的建议</title>
    <link href="http://yunvoo.com//blog/2015/05/25/%E5%AF%B9%E4%BA%8E%E6%8B%96%E5%BB%B6%E7%97%87%E7%9A%84%E5%BB%BA%E8%AE%AE.html"/>
    <id>http://yunvoo.com//blog/2015/05/25/对于拖延症的建议.html</id>
    <published>2015-05-24T16:00:00.000Z</published>
    <updated>2016-06-23T09:27:13.624Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;有意识地同时关注某一决定对当下以及未来造成的影响，而不是主要看眼前的结果。&lt;/li&gt;
&lt;li&gt;避免在多任务或者疲劳状态下做重要的决定。因为在这两种情况下，个体可能缺乏必要的心理资源（比如注意资源和意志力）去全面地思考问题。&lt;/li&gt;
&lt;li&gt;学会正确评估自身的拖延倾向。&lt;/li&gt;
&lt;li&gt;为自己设定不可逾越的最后期限，为需要长期投入的任务制定切实可行的计划并严格执行。&lt;/li&gt;
&lt;li&gt;考虑当前和未来结果时同时关注其相对具体的方面，比如要花多少时间，有多困难，以及相对抽象和具有目的性的方面，比如完成它意味着什么。&lt;/li&gt;
&lt;li&gt;学会正确评估未来的时间稀缺程度。一般情况下，如果一件事现在没时间做，未来也不太可能多出很多时间来让你做这件事。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;有意识地同时关注某一决定对当下以及未来造成的影响，而不是主要看眼前的结果。&lt;/li&gt;
&lt;li&gt;避免在多任务或者疲劳状态下做重要的决定。因为在这两种情况下，个体可能缺乏必要的心理资源（比如注意资源和意志力）去全面地思考问题。&lt;/li&gt;
&lt;li&gt;学会正确评估自身的拖
    
    </summary>
    
      <category term="散文" scheme="http://yunvoo.com/categories/%E6%95%A3%E6%96%87/"/>
    
    
      <category term="建议" scheme="http://yunvoo.com/tags/%E5%BB%BA%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>类模板基本语法</title>
    <link href="http://yunvoo.com//blog/2015/05/21/%E7%B1%BB%E6%A8%A1%E6%9D%BF%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95.html"/>
    <id>http://yunvoo.com//blog/2015/05/21/类模板基本语法.html</id>
    <published>2015-05-20T16:00:00.000Z</published>
    <updated>2016-06-23T05:41:24.484Z</updated>
    
    <content type="html">&lt;h2 id=&quot;类模板基本语法&quot;&gt;&lt;a href=&quot;#类模板基本语法&quot; class=&quot;headerlink&quot; title=&quot;类模板基本语法&quot;&gt;&lt;/a&gt;类模板基本语法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;1.先写出一个实际的类。由于其语义明确，含义清楚，一般不会出错。&lt;/li&gt;
&lt;li&gt;2.将此类中准备改变的类型名(如int要改变为float或char)改用一个自己指定的虚拟类型名&lt;/li&gt;
&lt;li&gt;3.在类声明前面加入一行，格式为：&lt;br&gt;  template &lt;class 虚拟类型参数=&quot;&quot;&gt;&lt;br&gt;如：&lt;br&gt;  template &lt;class numtype=&quot;&quot;&gt; //注意本行末尾无分号&lt;br&gt;  class Compare&lt;br&gt;  {…}; //类体&lt;/class&gt;&lt;/class&gt;&lt;/li&gt;
&lt;li&gt;4.用类模板定义对象时用以下形式：&lt;br&gt;  类模板名&amp;lt;实际类型名&amp;gt; 对象名;&lt;br&gt;  类模板名&amp;lt;实际类型名&amp;gt; 对象名(实参表列);&lt;br&gt;如：&lt;br&gt;  Compare&lt;int&gt; cmp;&lt;br&gt;  Compare&lt;int&gt; cmp(3,7);&lt;/int&gt;&lt;/int&gt;&lt;/li&gt;
&lt;li&gt;5.如果在类模板外定义成员函数，应写成类模板形式：&lt;br&gt; template &lt;class 虚拟类型参数=&quot;&quot;&gt;&lt;br&gt; 函数类型 类模板名&amp;lt;虚拟类型参数&amp;gt;::成员函数名(函数形参表列) {…}&lt;/class&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//A编程模板 类 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//模板类  类型参数化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//类模板的定义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//类模板的使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//类模板 做函数参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//模板类 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	A(T a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;a = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printA&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;a: &quot;&lt;/span&gt; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	T a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//从模板类 派生了 普通类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 模板类派生时, 需要具体化模板类. C++编译器需要知道 父类的数据类型具体是什么样子的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//=====&amp;gt; 要知道父类所占的内存大小是多少 只有数据类型固定下来,才知道如何分配内存 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; B : &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; A&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	B(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b=&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) : A&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;b = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printB&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;a:&quot;&lt;/span&gt; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot; b: &quot;&lt;/span&gt; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//从模板类 派生 模板类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; C : &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; A&amp;lt;T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	C(T c, T a) : A&amp;lt;T&amp;gt;(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;c = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printC&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;c:&quot;&lt;/span&gt; &amp;lt;&amp;lt; c &amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	T c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	C&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; c1(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	c1.printC();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	system(&lt;span class=&quot;string&quot;&gt;&quot;pause&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main62&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;B  &lt;span class=&quot;title&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b1.printB();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	system(&lt;span class=&quot;string&quot;&gt;&quot;pause&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//类模板 做函数参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//参数 ,C++编译器 要求具体的类 所以所 要 A&amp;lt;int&amp;gt; &amp;amp;a &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UseA&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( A&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;amp;a )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a.printA();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main61&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//模板类(本身就是类型化的)====具体的类=====&amp;gt;定义具体的变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	A&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; a1(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;), a2(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;), a3(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//模板类是抽象的  ====&amp;gt;需要进行 类型具体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//a1.printA();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	UseA(a1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	UseA(a2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	UseA(a3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;hello...&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	system(&lt;span class=&quot;string&quot;&gt;&quot;pause&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;关于类模板的几点说明&quot;&gt;&lt;a href=&quot;#关于类模板的几点说明&quot; class=&quot;headerlink&quot; title=&quot;关于类模板的几点说明&quot;&gt;&lt;/a&gt;关于类模板的几点说明&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;1.类模板的类型参数可以有一个或多个，每个类型前面都必须加class，如：&lt;br&gt;  template &lt;class t1,class=&quot;&quot; t2=&quot;&quot;&gt;&lt;br&gt;  class someclass&lt;br&gt;  {…};&lt;br&gt;在定义对象时分别代入实际的类型名，如：&lt;br&gt;  someclass&lt;int,double&gt; obj;&lt;/int,double&gt;&lt;/class&gt;&lt;/li&gt;
&lt;li&gt;2.和使用类一样，使用类模板时要注意其作用域，只能在其有效作用域内用它定义对象。&lt;/li&gt;
&lt;li&gt;3.模板可以有层次，一个类模板可以作为基类，派生出派生模板类。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;类模板基本语法&quot;&gt;&lt;a href=&quot;#类模板基本语法&quot; class=&quot;headerlink&quot; title=&quot;类模板基本语法&quot;&gt;&lt;/a&gt;类模板基本语法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;1.先写出一个实际的类。由于其语义明确，含义清楚，一般不会出错。&lt;/li&gt;
&lt;li&gt;2.
    
    </summary>
    
    
      <category term="类模板" scheme="http://yunvoo.com/tags/%E7%B1%BB%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>C++编译器模板机制剖析</title>
    <link href="http://yunvoo.com//blog/2015/05/20/C++%E7%BC%96%E8%AF%91%E5%99%A8%E6%A8%A1%E6%9D%BF%E6%9C%BA%E5%88%B6%E5%89%96%E6%9E%90.html"/>
    <id>http://yunvoo.com//blog/2015/05/20/C++编译器模板机制剖析.html</id>
    <published>2015-05-19T16:00:00.000Z</published>
    <updated>2016-06-23T03:44:48.930Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;思考：为什么函数模板可以和函数重载放在一块。C++编译器是如何提供函数模板机制的？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;编译器原理&quot;&gt;&lt;a href=&quot;#编译器原理&quot; class=&quot;headerlink&quot; title=&quot;编译器原理&quot;&gt;&lt;/a&gt;编译器原理&lt;/h2&gt;&lt;h3 id=&quot;什么是gcc&quot;&gt;&lt;a href=&quot;#什么是gcc&quot; class=&quot;headerlink&quot; title=&quot;什么是gcc&quot;&gt;&lt;/a&gt;什么是gcc&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;gcc（GNU C Compiler）编译器的作者是Richard Stallman，也是GNU项目的奠基者。&lt;br&gt;什么是gcc：gcc是GNU Compiler Collection的缩写。最初是作为C语言的编译器（GNU C Compiler），&lt;br&gt;现在已经支持多种语言了，如C、C++、Java、Pascal、Ada、COBOL语言等。&lt;br&gt;gcc支持多种硬件平台，甚至对Don Knuth 设计的 MMIX 这类不常见的计算机都提供了完善的支持&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;gcc主要特征&quot;&gt;&lt;a href=&quot;#gcc主要特征&quot; class=&quot;headerlink&quot; title=&quot;gcc主要特征&quot;&gt;&lt;/a&gt;gcc主要特征&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1.gcc是一个可移植的编译器，支持多种硬件平台&lt;/li&gt;
&lt;li&gt;2.gcc不仅仅是个本地编译器，它还能跨平台交叉编译。&lt;/li&gt;
&lt;li&gt;3.gcc有多种语言前端，用于解析不同的语言。&lt;/li&gt;
&lt;li&gt;4.gcc是按模块化设计的，可以加入新语言和新CPU架构的支持&lt;/li&gt;
&lt;li&gt;5.gcc是自由软件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;gcc编译过程&quot;&gt;&lt;a href=&quot;#gcc编译过程&quot; class=&quot;headerlink&quot; title=&quot;gcc编译过程&quot;&gt;&lt;/a&gt;gcc编译过程&lt;/h3&gt;&lt;p&gt;预处理（Pre-Processing）&lt;br&gt;编译（Compiling）&lt;br&gt;汇编（Assembling）&lt;br&gt;链接（Linking）&lt;br&gt;Gcc &lt;em&gt;.c –o 1exe (总的编译步骤)&lt;br&gt;Gcc –E 1.c –o 1.i  //宏定义 宏展开&lt;br&gt;Gcc –S 1.i –o 1.s&lt;br&gt;Gcc –c 1.s –o 1.o&lt;br&gt;Gcc 1.o –o 1exe&lt;br&gt;结论：gcc编译工具是一个工具链。&lt;br&gt;&lt;img src=&quot;http://7xrzzi.com1.z0.glb.clouddn.com/gcc.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;em&gt;* hello程序是一个高级Ｃ语言程序，这种形式容易被人读懂。为了在系统上运行hello.c程序，每条Ｃ语句都必须转化为低级机器指令。然后将这些指令打包成可执行目标文件格式，并以二进制形式存储器于磁盘中。&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;gcc常用编译选项&quot;&gt;&lt;a href=&quot;#gcc常用编译选项&quot; class=&quot;headerlink&quot; title=&quot;gcc常用编译选项&quot;&gt;&lt;/a&gt;gcc常用编译选项&lt;/h3&gt;&lt;p&gt;选项    作用&lt;br&gt;-o    产生目标（.i、.s、.o、可执行文件等）&lt;br&gt;-c    通知gcc取消链接步骤，即编译源码并在最后生成目标文件&lt;br&gt;-E    只运行C预编译器&lt;br&gt;-S    告诉编译器产生汇编语言文件后停止编译，产生的汇编语言文件扩展名为.s&lt;br&gt;-Wall    使gcc对源文件的代码有问题的地方发出警告&lt;br&gt;-Idir    将dir目录加入搜索头文件的目录路径&lt;br&gt;-Ldir    将dir目录加入搜索库的目录路径&lt;br&gt;-llib    链接lib库&lt;br&gt;-g    在目标文件中嵌入调试信息，以便gdb之类的调试程序调试&lt;/p&gt;
&lt;h2 id=&quot;练习&quot;&gt;&lt;a href=&quot;#练习&quot; class=&quot;headerlink&quot; title=&quot;练习&quot;&gt;&lt;/a&gt;练习&lt;/h2&gt;&lt;p&gt;gcc -E hello.c -o hello.i（预处理）&lt;br&gt;gcc -S hello.i -o hello.s（编译）&lt;br&gt;gcc -c hello.s -o hello.o（汇编）&lt;br&gt;gcc hello.o -o hello（链接）&lt;br&gt;以上四个步骤，可合成一个步骤&lt;br&gt;gcc hello.c -o hello（直接编译链接成可执行目标文件）&lt;br&gt;gcc -c hello.c或gcc -c hello.c -o hello.o（编译生成可重定位目标文件）&lt;/p&gt;
&lt;p&gt;&lt;em&gt;建议初学都加这个选项。下面这个例子如果不加-Wall选项编译器不报任何错误，但是得到的结果却不是预期的。&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;2+1 is %f&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Gcc编译多个.c&lt;br&gt;hello_1.h&lt;br&gt;hello_1.c&lt;br&gt;main.c&lt;br&gt;一次性编译&lt;br&gt;gcc  hello_1.c main.c –o newhello&lt;br&gt;独立编译&lt;br&gt;gcc -Wall -c main.c -o main.o&lt;br&gt;gcc -Wall -c hello_1.c -o hello_fn.o&lt;br&gt;gcc -Wall main.o hello_1.o -o newhello&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;模板函数反汇编观察&quot;&gt;&lt;a href=&quot;#模板函数反汇编观察&quot; class=&quot;headerlink&quot; title=&quot;模板函数反汇编观察&quot;&gt;&lt;/a&gt;模板函数反汇编观察&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//cpp文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 1.cpp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// g++ -S 1.cpp  -o 1.s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;myswap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	T c = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	c = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;hello ....我是模板函数 欢迎 calll 我&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		myswap&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;(x, y); &lt;span class=&quot;comment&quot;&gt;//1 函数模板 显示类型 调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;x:%d y:%d \n&quot;&lt;/span&gt;, x, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a = &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; b = &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		myswap&amp;lt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&amp;gt;(a, b); &lt;span class=&quot;comment&quot;&gt;//1 函数模板 显示类型 调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a:%c b:%c \n&quot;&lt;/span&gt;, a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;g++ -S 1.cpp -o l.s&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;262&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;263&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;264&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;265&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;266&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;267&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;268&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;269&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;270&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;271&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;272&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;273&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;274&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;275&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;276&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;277&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;278&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;279&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;280&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;281&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//生成的`1.s`文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.file	&amp;quot;1.cpp&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	__ZL6printfPKcz;	.scl	3;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__ZL6printfPKcz:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFB264:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_startproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pushl	%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_offset 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_offset 5, -8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%esp, %ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_register 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pushl	%ebx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subl	$36, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_offset 3, -12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	leal	12(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, -12(%ebp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	-12(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, 4(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	8(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	___mingw_vprintf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, %ebx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%ebx, %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	addl	$36, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	popl	%ebx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_restore 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	popl	%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_restore 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa 4, 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ret&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_endproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFE264:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.lcomm __ZStL8__ioinit,1,1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	___main;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.section .rdata,&amp;quot;dr&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LC0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.ascii &amp;quot;x:%d y:%d \12\0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LC1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.ascii &amp;quot;a:%c b:%c \12\0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.globl	_main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	_main;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_main:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFB1023:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_startproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_personality 0,___gxx_personality_v0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_lsda 0,LLSDA1023&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pushl	%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_offset 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_offset 5, -8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%esp, %ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_register 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	andl	$-16, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subl	$32, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	___main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$10, 28(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$20, 24(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	leal	24(%esp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, 4(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	leal	28(%esp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LEHB0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__Z6myswapIiEvRT_S1_&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LEHE0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	24(%esp), %edx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	28(%esp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%edx, 8(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, 4(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$LC0, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__ZL6printfPKcz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movb	$97, 23(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movb	$98, 22(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	leal	22(%esp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, 4(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	leal	23(%esp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LEHB1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__Z6myswapIcEvRT_S1_&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LEHE1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movzbl	22(%esp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movsbl	%al, %edx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movzbl	23(%esp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movsbl	%al, %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%edx, 8(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, 4(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$LC1, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__ZL6printfPKcz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$0, %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	jmp	L9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;L7:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LEHB2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__Unwind_Resume&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;L8:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__Unwind_Resume&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LEHE2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;L9:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	leave&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_restore 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa 4, 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ret&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_endproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFE1023:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	___gxx_personality_v0;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.section	.gcc_except_table,&amp;quot;w&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LLSDA1023:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.byte	0xff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.byte	0xff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.byte	0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 LLSDACSE1023-LLSDACSB1023&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LLSDACSB1023:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 LEHB0-LFB1023&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 LEHE0-LEHB0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 L7-LFB1023&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 LEHB1-LFB1023&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 LEHE1-LEHB1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 L8-LFB1023&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 LEHB2-LFB1023&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 LEHE2-LEHB2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.uleb128 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LLSDACSE1023:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.section .rdata,&amp;quot;dr&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LC2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.ascii &amp;quot;hello ....\316\322\312\307\304\243\260\345\272\257\312\375 \273\266\323\255 calll \316\322\0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.section	.text$_Z6myswapIiEvRT_S1_,&amp;quot;x&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.linkonce discard&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.globl	__Z6myswapIiEvRT_S1_&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	__Z6myswapIiEvRT_S1_;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__Z6myswapIiEvRT_S1_:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFB1024:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_startproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pushl	%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_offset 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_offset 5, -8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%esp, %ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_register 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subl	$40, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$0, -12(%ebp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	8(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	(%eax), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, -12(%ebp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	12(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	(%eax), %edx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	8(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%edx, (%eax)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	12(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	-12(%ebp), %edx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%edx, (%eax)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$LC2, 4(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$__ZSt4cout, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, %ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__ZNSolsEPFRSoS_E&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subl	$4, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	leave&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_restore 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa 4, 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ret&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_endproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFE1024:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.section	.text$_Z6myswapIcEvRT_S1_,&amp;quot;x&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.linkonce discard&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.globl	__Z6myswapIcEvRT_S1_&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	__Z6myswapIcEvRT_S1_;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__Z6myswapIcEvRT_S1_:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFB1025:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_startproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pushl	%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_offset 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_offset 5, -8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%esp, %ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_register 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subl	$40, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movb	$0, -9(%ebp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	8(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movzbl	(%eax), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movb	%al, -9(%ebp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	12(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movzbl	(%eax), %edx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	8(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movb	%dl, (%eax)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	12(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movzbl	-9(%ebp), %edx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movb	%dl, (%eax)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$LC2, 4(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$__ZSt4cout, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%eax, %ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__ZNSolsEPFRSoS_E&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subl	$4, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	leave&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_restore 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa 4, 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ret&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_endproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFE1025:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	___tcf_0;	.scl	3;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;___tcf_0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFB1035:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_startproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pushl	%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_offset 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_offset 5, -8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%esp, %ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_register 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subl	$8, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$__ZStL8__ioinit, %ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__ZNSt8ios_base4InitD1Ev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	leave&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_restore 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa 4, 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ret&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_endproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFE1035:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	__Z41__static_initialization_and_destruction_0ii;	.scl	3;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__Z41__static_initialization_and_destruction_0ii:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFB1034:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_startproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pushl	%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_offset 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_offset 5, -8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%esp, %ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_register 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subl	$24, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cmpl	$1, 8(%ebp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	jne	L13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cmpl	$65535, 12(%ebp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	jne	L13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$__ZStL8__ioinit, %ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__ZNSt8ios_base4InitC1Ev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$___tcf_0, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	_atexit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;L13:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	leave&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_restore 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa 4, 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ret&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_endproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFE1034:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	__GLOBAL__sub_I_main;	.scl	3;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__GLOBAL__sub_I_main:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFB1036:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_startproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pushl	%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_offset 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_offset 5, -8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	%esp, %ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa_register 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subl	$24, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$65535, 4(%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	movl	$1, (%esp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	call	__Z41__static_initialization_and_destruction_0ii&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	leave&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_restore 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_def_cfa 4, 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ret&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.cfi_endproc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LFE1036:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.section	.ctors,&amp;quot;w&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.long	__GLOBAL__sub_I_main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.ident	&amp;quot;GCC: (rev2, Built by MinGW-builds project) 4.8.0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	___mingw_vprintf;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	__Unwind_Resume;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	__ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	__ZNSolsEPFRSoS_E;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	__ZNSt8ios_base4InitD1Ev;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	__ZNSt8ios_base4InitC1Ev;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.def	_atexit;	.scl	2;	.type	32;	.endef&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;函数模板机制结论&quot;&gt;&lt;a href=&quot;#函数模板机制结论&quot; class=&quot;headerlink&quot; title=&quot;函数模板机制结论&quot;&gt;&lt;/a&gt;函数模板机制结论&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;编译器并不是把函数模板处理成能够处理任意类的函数&lt;/li&gt;
&lt;li&gt;编译器从函数模板通过具体类型产生不同的函数&lt;/li&gt;
&lt;li&gt;编译器会对函数模板进行两次编译&lt;/li&gt;
&lt;li&gt;在声明的地方对模板代码本身进行编译；在调用的地方对参数替换后的代码进行编译&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;思考：为什么函数模板可以和函数重载放在一块。C++编译器是如何提供函数模板机制的？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;编译器原理&quot;&gt;&lt;a href=&quot;#编译器原理&quot; class=&quot;headerlink&quot; title=&quot;编译器原理&quot;&gt;&lt;/a&gt;编译器原理&lt;/h2
    
    </summary>
    
      <category term="c/c++" scheme="http://yunvoo.com/categories/c-c/"/>
    
    
      <category term="C++编译器" scheme="http://yunvoo.com/tags/C-%E7%BC%96%E8%AF%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>泛型编程之函数模板基础.md</title>
    <link href="http://yunvoo.com//blog/2015/05/19/%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF%E5%9F%BA%E7%A1%80.html"/>
    <id>http://yunvoo.com//blog/2015/05/19/泛型编程之函数模板基础.html</id>
    <published>2015-05-18T16:00:00.000Z</published>
    <updated>2016-06-23T02:39:06.298Z</updated>
    
    <content type="html">&lt;h2 id=&quot;函数模板&quot;&gt;&lt;a href=&quot;#函数模板&quot; class=&quot;headerlink&quot; title=&quot;函数模板&quot;&gt;&lt;/a&gt;函数模板&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//泛型编程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;myswap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	T c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	c = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;hello...模板函数&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//函数模板的调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//显示类型 调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//自动类型 推导&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//显示类型 调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;   &lt;span class=&quot;comment&quot;&gt;// int 类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		myswap&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;(x, y); &lt;span class=&quot;comment&quot;&gt;//函数模板 显示类型 调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;x:%d y:%d\n&quot;&lt;/span&gt;, x, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// char 类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a = &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; b = &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		myswap&amp;lt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&amp;gt;(a, b); &lt;span class=&quot;comment&quot;&gt;//函数模板 显示类型 调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a:%d b:%d\n&quot;&lt;/span&gt;, a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; system(&lt;span class=&quot;string&quot;&gt;&quot;pause&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//自动类型推导&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;   &lt;span class=&quot;comment&quot;&gt;//int 类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//myswap&amp;lt;int&amp;gt;(x,y); //1 函数模板显示类型 调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		myswap(x, y);  &lt;span class=&quot;comment&quot;&gt;//2 自动类型 推导&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;x:%d y:%d\n&quot;&lt;/span&gt;, x, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// char 类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a = &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; b = &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		myswap(a, b); &lt;span class=&quot;comment&quot;&gt;//函数模板 显示类型 调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a:%d b:%d\n&quot;&lt;/span&gt;, a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	system(&lt;span class=&quot;string&quot;&gt;&quot;pause&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;函数模板当函数参数&quot;&gt;&lt;a href=&quot;#函数模板当函数参数&quot; class=&quot;headerlink&quot; title=&quot;函数模板当函数参数&quot;&gt;&lt;/a&gt;函数模板当函数参数&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 函数模板 本质 : 类型参数化  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//方便.....&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//对字符数组  int数组进行排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T, &lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T2 &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;mySort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T *&lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;, T2 size)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	T2 i, j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	T tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt; == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//选择  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;size; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (j = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j&amp;lt;size; j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;[i] &amp;lt; &lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;[j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				tmp = &lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;[i] = &lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;[j] = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T, &lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;myPrint&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T *&lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;, T2 size)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	T2 i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;size; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;[i] &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// int类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			int myarray[] = &amp;#123;11, 33,44, 33,22, 2, 3, 6, 9&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			int size =  sizeof(myarray)/sizeof(*myarray);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mySort&amp;lt;int, int&amp;gt; (myarray, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			printf(&quot;排序之后\n&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			myPrint(myarray, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//char 类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; buf[] = &lt;span class=&quot;string&quot;&gt;&quot;abcdefg654321&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len = &lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mySort&amp;lt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;(buf, len);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		myPrint&amp;lt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;(buf, len);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;hello...&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	system(&lt;span class=&quot;string&quot;&gt;&quot;pause&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;函数模板遇上函数重载&quot;&gt;&lt;a href=&quot;#函数模板遇上函数重载&quot; class=&quot;headerlink&quot; title=&quot;函数模板遇上函数重载&quot;&gt;&lt;/a&gt;函数模板遇上函数重载&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//类型参数化---方便进行编码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//泛型编程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;myswap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//函数模板&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	T c = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	c = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;Hello....函数模板&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;myswap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c)&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//普通函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;a:&quot;&lt;/span&gt; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;c:&quot;&lt;/span&gt; &amp;lt;&amp;lt; c &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;普通函数&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c = &lt;span class=&quot;string&quot;&gt;&#39;z&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	myswap(a, c); &lt;span class=&quot;comment&quot;&gt;//普通函数的调用：可以进行隐式的类型转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	myswap(c, a); &lt;span class=&quot;comment&quot;&gt;//普通函数的调用：可以进行隐式的类型转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	myswap(a, a); &lt;span class=&quot;comment&quot;&gt;//函数模板的调用（本质：类型参数化）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	              &lt;span class=&quot;comment&quot;&gt;//将严格按照类型进行匹配，不会进行自动类型转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	system(&lt;span class=&quot;string&quot;&gt;&quot;pause&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;函数模板和普通函数在一起调用规则研究&quot;&gt;&lt;a href=&quot;#函数模板和普通函数在一起调用规则研究&quot; class=&quot;headerlink&quot; title=&quot;函数模板和普通函数在一起调用规则研究&quot;&gt;&lt;/a&gt;函数模板和普通函数在一起调用规则研究&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;函数模板不允许自动类型转化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;普通函数能够进行自动类型转换&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 函数模板可以像普通函数一样被重载&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 C++编译器优先考虑普通函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 如果函数模板可以产生一个更好的匹配，那么选择模板&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 可以通过空模板实参列表的语法限定编译器只通过模板匹配&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;iostream&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;int Max(int a, int b)&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T a, T b)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;T Max(T a, T b)&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a &amp;gt; b ? a : b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T a, T b, T c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;T Max(T a, T b, T c)&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Max(Max(a, b), c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; Max(a, b) &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//当函数模板和普通函数都符合调用时,优先选择普通函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; Max&amp;lt;&amp;gt;(a, b) &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//若显示使用函数模板,则使用&amp;lt;&amp;gt; 类型列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; Max(&lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4.0&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//如果 函数模板产生更好的匹配 使用函数模板&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; Max(&lt;span class=&quot;number&quot;&gt;5.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7.0&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//重载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; Max(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//调用普通函数 可以隐式类型转换 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	system(&lt;span class=&quot;string&quot;&gt;&quot;pause&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;函数模板&quot;&gt;&lt;a href=&quot;#函数模板&quot; class=&quot;headerlink&quot; title=&quot;函数模板&quot;&gt;&lt;/a&gt;函数模板&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
    
    </summary>
    
      <category term="c/c++" scheme="http://yunvoo.com/categories/c-c/"/>
    
    
      <category term="函数模板" scheme="http://yunvoo.com/tags/%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>c++重载、重写、重定义区别</title>
    <link href="http://yunvoo.com//blog/2015/03/27/%E9%87%8D%E8%BD%BD%E3%80%81%E9%87%8D%E5%86%99%E3%80%81%E9%87%8D%E5%AE%9A%E4%B9%89%E5%8C%BA%E5%88%AB.html"/>
    <id>http://yunvoo.com//blog/2015/03/27/重载、重写、重定义区别.html</id>
    <published>2015-03-26T16:00:00.000Z</published>
    <updated>2016-06-22T09:49:58.721Z</updated>
    
    <content type="html">&lt;p&gt;&lt;/p&gt;&lt;h2&gt;一 重载（overload）&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;概念：&lt;/h4&gt;&lt;br&gt;函数有同样的名称，但是参数列表不相同的情形，这样的同名不同参数的函数之间，互相称之为重载函数。&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;基本条件：&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;函数名必须相同；&lt;/li&gt;&lt;br&gt;    &lt;li&gt;函数参数必须不相同，可以是参数类型或者参数个数不同；&lt;/li&gt;&lt;br&gt;    &lt;li&gt;函数返回值可以相同，也可以不相同；&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&amp;gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;注意：&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;只能通过不同的参数样式进行重载，例如：不同的参数类型，不同的参数个数，不同的参数顺序；&lt;/li&gt;&lt;br&gt;    &lt;li&gt;不能通过访问权限、返回类型、抛出的异常进行重载；&lt;/li&gt;&lt;br&gt;    &lt;li&gt;重载的函数应该在相同的作用域下；&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;验证程序：&lt;/h4&gt;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; A &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; arg1)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;func 1&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// OK: 通过参数类型不同重载 Func1()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; arg1)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;func 2&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// OK: 通过参数个数不同重载 Func1()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; arg1, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; arg2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;func 3&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// OK: 重载函数返回值可以不同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; arg1, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; arg2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;func 4&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ERROR: 不能只通过返回值来进行重载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/*bool Func1(int arg1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; _tmain(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, _TCHAR* argv[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  A a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a.Func1(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a.Func1(&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a.Func1(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a.Func1(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;输出：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func 4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h2&gt;二 重写（override）&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;概念：&lt;/h4&gt;也称为覆盖，子类重新定义父类中有相同名称和参数的虚函数，主要在继承关系中出现。&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;基本条件：&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;重写的函数和被重写的函数必须为virtual函数，分别位于基类和派生类中；&lt;/li&gt;&lt;br&gt;    &lt;li&gt;重写的函数和被重写的函数函数名和函数参数必须一致；&lt;/li&gt;&lt;br&gt;    &lt;li&gt;重写的函数和被重写的函数返回值相同，或者都返回指针或引用，并且派生类虚函数所返回的指针或引用的类型是基类中被替换的虚函数所返回的&lt;/li&gt;&lt;br&gt;    &lt;li&gt;指针或引用的类型的子类型。&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;注意：&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;重写的函数所抛出的异常必须和被重写的函数所抛出的异常一致，或者是其子类；&lt;/li&gt;&lt;br&gt;    &lt;li&gt;重写的函数的访问修饰符可以不同于被重写的函数，如基类的virtual函数的修饰符为private，派生类改为public或protected也是可以的。&lt;/li&gt;&lt;br&gt;    &lt;li&gt;静态方法不能被重写，也就是static和virtual不能同时使用。&lt;/li&gt;&lt;br&gt;    &lt;li&gt;重写的函数可以带virtual关键字，也可以不带。&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;验证程序：&lt;/h4&gt;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; A &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; B : &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; A &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; C &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class C: func 1&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; A* &lt;span class=&quot;title&quot;&gt;Func2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class C: func 2&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; A;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ERROR:静态函数不能被声明为virtual，也就没办法被重写。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// static virtual void FuncStatic() &amp;#123;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//由于Func3被声明为private，所以需要通过public函数来调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ShowFunc3&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Func3();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func4&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class C: func 4&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func3&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class C: func 3&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; D : &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; C &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// OK: 重写C类Func1，可以不带virtual关键字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class D: func 1&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// OK: 当返回值为指针或者引用时，返回值可以是父类返回值类型的子类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; B* &lt;span class=&quot;title&quot;&gt;Func2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class D: func 2&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ERROR: 除上面的情况，返回值类型要和父类一直&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/*virtual bool Func2() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// OK: 重写的函数的访问修饰符可以不同于被重写的函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func3&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class D: func 3&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// OK: 重写的函数的访问修饰符可以不同于被重写的函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func4&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class D: func 4&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; _tmain(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, _TCHAR* argv[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  C* c = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; D;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c-&amp;gt;Func1();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c-&amp;gt;Func2();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c-&amp;gt;ShowFunc3();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c-&amp;gt;Func4();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;输出：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class D: func 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class D: func 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class D: func 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class D: func 4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h2&gt;三 重定义（redefining）&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;概念：&lt;/h4&gt;也叫隐藏，子类重新定义父类中的非虚函数，屏蔽了父类的同名函数&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;基本条件：&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;被隐藏的函数之间作用域不相同&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;注意：&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;子类和父类的函数名称相同，但参数不同，此时不管父类函数是不是virtual函数，都将被隐藏。&lt;/li&gt;&lt;br&gt;    &lt;li&gt;子类和父类的函数名称相同，参数也相同，但是父类函数不是virtual函数，父类的函数将被隐藏。&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;验证程序：&lt;/h4&gt;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; A &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class A: Func1&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class A: Func2&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; B : &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; A &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 将会重定义父类的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class B: Func1&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 将会重写(override)父类方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class B: Func2-1&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 将会重定义父类的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Func2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;class B: Func2-2&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; _tmain(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, _TCHAR* argv[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  B* b = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  b-&amp;gt;Func1(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  b-&amp;gt;Func2(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  b-&amp;gt;Func2(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;输出：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class B: Func1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class B: Func2-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class B: Func2-2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;h2&gt;一 重载（overload）&lt;/h2&gt;&lt;/p&gt;
&lt;p&gt;&lt;h4&gt;概念：&lt;/h4&gt;&lt;br&gt;函数有同样的名称，但是参数列表不相同的情形，这样的同名不同参数的函数之间，互相称之为重载函数。&lt;/p&gt;
&lt;p&gt;&lt;h4&gt;基本条件：&lt;/h4&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;函数名必须相同；&lt;/li&gt;&lt;br&gt;    &lt;li&gt;函数参数必须不相同，可以是参数类型或者参数个数不同；&lt;/li&gt;&lt;br&gt;    &lt;li&gt;函数返回值可以相同，也可以不相同；&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&amp;gt;
    
    </summary>
    
      <category term="c/c++" scheme="http://yunvoo.com/categories/c-c/"/>
    
    
      <category term="重载重定义" scheme="http://yunvoo.com/tags/%E9%87%8D%E8%BD%BD%E9%87%8D%E5%AE%9A%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>深度探索C++对象模型：类的大小</title>
    <link href="http://yunvoo.com//blog/2015/03/20/%E6%8E%A2%E7%B4%A2C++%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%EF%BC%9A%E7%B1%BB%E7%9A%84%E5%A4%A7%E5%B0%8F.html"/>
    <id>http://yunvoo.com//blog/2015/03/20/探索C++对象模型：类的大小.html</id>
    <published>2015-03-19T16:00:00.000Z</published>
    <updated>2016-06-22T01:18:13.338Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;C++&lt;/code&gt; 初学者常有一个错误的认识，认为一个 &lt;code&gt;class&lt;/code&gt; 的大小就是该 &lt;code&gt;class&lt;/code&gt; 内所有 &lt;code&gt;non static members&lt;/code&gt; 的大小总和。既然是错误的认识，那么实际上就不是或者不单纯是该 &lt;code&gt;class&lt;/code&gt; 内所有 &lt;code&gt;non static members&lt;/code&gt; 的大小总和。在 &lt;code&gt;c++&lt;/code&gt; 对象模型里，一个 &lt;code&gt;class&lt;/code&gt; 的大小主要受下面三个方面影响&lt;br&gt;现在有这样一段代码：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; A &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; B : &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; A &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; C : &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; A &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; D : &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; B, &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; C &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;对 &lt;code&gt;class A、B、C、D&lt;/code&gt; 进行 &lt;code&gt;sizeof&lt;/code&gt; 运算结果是什么呢？如果你心里已经有了答案，不妨看完下面的分析再说。   &lt;/p&gt;
&lt;h3 id=&quot;1-语言本身特性造成的额外负担&quot;&gt;&lt;a href=&quot;#1-语言本身特性造成的额外负担&quot; class=&quot;headerlink&quot; title=&quot;1 语言本身特性造成的额外负担&quot;&gt;&lt;/a&gt;1 语言本身特性造成的额外负担&lt;/h3&gt;&lt;p&gt;这里的额外负担主要是受 &lt;code&gt;virtual&lt;/code&gt; 特性影响，包括 &lt;code&gt;virtual base class&lt;/code&gt; 和 &lt;code&gt;virtual function&lt;/code&gt;。在 &lt;code&gt;derived class&lt;/code&gt; 中这种额外负担反映在某种形式的指针上，可以是虚函数指针，或者指向虚基类的 &lt;code&gt;subject class&lt;/code&gt; 偏移地址等。详细内容可以参考&lt;a href=&quot;http://glgjing.github.io/blog/2015/01/03/c-plus-plus-xu-han-shu-qian-xi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;C++ 虚函数浅析&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;2-编译器对特殊情况的优化处理&quot;&gt;&lt;a href=&quot;#2-编译器对特殊情况的优化处理&quot; class=&quot;headerlink&quot; title=&quot;2 编译器对特殊情况的优化处理&quot;&gt;&lt;/a&gt;2 编译器对特殊情况的优化处理&lt;/h3&gt;&lt;p&gt;例如对于 &lt;code&gt;empty virtual base class&lt;/code&gt; 的特殊支持，在 &lt;code&gt;C++&lt;/code&gt; 对象模型中一个空的 &lt;code&gt;class&lt;/code&gt; 大小为 &lt;code&gt;1 byte&lt;/code&gt;，因为编译器为了使每个 &lt;code&gt;object&lt;/code&gt; 在内存中能有独一无二的地址，为空 &lt;code&gt;class&lt;/code&gt; 安插了一个 &lt;code&gt;char&lt;/code&gt;。如果一个空的 &lt;code&gt;class&lt;/code&gt; 大小为 &lt;code&gt;0 byte&lt;/code&gt;，那么像该 &lt;code&gt;class&lt;/code&gt; 的数组 &lt;code&gt;A x[10];&lt;/code&gt;，编译器将无法区分每个元素的地址。但是如果 &lt;code&gt;derived class&lt;/code&gt; 的大小不为 &lt;code&gt;0&lt;/code&gt;，就不需要 &lt;code&gt;base class&lt;/code&gt; 的 &lt;code&gt;1 byte&lt;/code&gt; 进行内存地址区分，那么如果编译器对这种情况进行了优化的话，就会将该 &lt;code&gt;1 byte&lt;/code&gt; 去掉，如果没有还是会继续保留这个额外的 &lt;code&gt;1 byte&lt;/code&gt; 空间。  &lt;/p&gt;
&lt;p&gt;说到编译器对特殊情况的优化，下面这段话比较恰当表述了编译器演化与&lt;code&gt;C++&lt;/code&gt;对象模型的关系：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编译器之间的潜在差异正说明了 &lt;code&gt;C++&lt;/code&gt; 对象模型的演化。这个模型为一般情况提供了解决之道，当特殊情况渐渐被挖掘出来时，种种启发法于是被引入，提供优化的处理。如果成功，启发法于是就提升为普遍的策略，并跨越各种编译器而合并。他被视为标准（虽然他并不被规范为标准），久而久之也就成了语言的一部分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;3-边界调整（Dlignment）的影响&quot;&gt;&lt;a href=&quot;#3-边界调整（Dlignment）的影响&quot; class=&quot;headerlink&quot; title=&quot;3 边界调整（Dlignment）的影响&quot;&gt;&lt;/a&gt;3 边界调整（Dlignment）的影响&lt;/h3&gt;&lt;p&gt;为了数据能够更有效率的在内存中存取，编译器会 &lt;code&gt;class&lt;/code&gt; 的内存边界进行调整，在&lt;code&gt;32&lt;/code&gt;位机器上通常 &lt;code&gt;alignment&lt;/code&gt; 为 &lt;code&gt;4 bytes&lt;/code&gt;，以使总线的运输效率最高。&lt;/p&gt;
&lt;p&gt;经过上面的分析后，可以看出具体结果要视编译器而定。首先讨论在编译器没有对 &lt;code&gt;empty virtual base class&lt;/code&gt; 进行优化的情况，那么：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;class A&lt;/code&gt;  的大小应该是 &lt;code&gt;1 byte&lt;/code&gt;，该 &lt;code&gt;1 byte&lt;/code&gt; 由编译器插入。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;class B&lt;/code&gt; 和 &lt;code&gt;class C&lt;/code&gt; 的大小相同为 &lt;code&gt;8&lt;/code&gt;，包括 &lt;code&gt;4 byte&lt;/code&gt; 的 虚基类指针再加上 &lt;code&gt;1 byte&lt;/code&gt; 的基类 A的大小，考虑到内存对齐需要补齐 &lt;code&gt;3 byte&lt;/code&gt;，所以最终结果为 &lt;code&gt;8 byte&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;class D&lt;/code&gt; 的大小为&lt;code&gt;12 byte&lt;/code&gt;，包括 &lt;code&gt;class B&lt;/code&gt; 和 &lt;code&gt;class C&lt;/code&gt; 内的两个 &lt;code&gt;4 byte&lt;/code&gt; 虚基类指针共 &lt;code&gt;8 byte&lt;/code&gt;，此外由于 &lt;code&gt;A&lt;/code&gt; 为虚基类，所以在 &lt;code&gt;D&lt;/code&gt; 内只有一个实体，所以应该再加上 &lt;code&gt;A&lt;/code&gt; 的 &lt;code&gt;1 byte&lt;/code&gt; 和内存对齐额外补齐的 &lt;code&gt;3 byte&lt;/code&gt;，共 &lt;code&gt;12 byte&lt;/code&gt;。   &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以最终结果为：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(A) = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; byte&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(B) = &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(C) = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; byte&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(D) = &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; byte。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;如果编译器对 &lt;code&gt;empty virtual base class&lt;/code&gt; 进行了优化，那么 &lt;code&gt;class A&lt;/code&gt; 的 &lt;code&gt;1 byte&lt;/code&gt; 空间在派生类中将被拿掉，相应的由于内存对齐而引起的 &lt;code&gt;3 byte&lt;/code&gt; 也被去掉了，所以最终结果应该是：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(A) = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; byte&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(B) = &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(C) = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; byte&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(D) = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; byte。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;C++&lt;/code&gt; 初学者常有一个错误的认识，认为一个 &lt;code&gt;class&lt;/code&gt; 的大小就是该 &lt;code&gt;class&lt;/code&gt; 内所有 &lt;code&gt;non static members&lt;/code&gt; 的大小总和。既然是错误的认识，那么实际上就
    
    </summary>
    
      <category term="c/c++" scheme="http://yunvoo.com/categories/c-c/"/>
    
    
      <category term="c++" scheme="http://yunvoo.com/tags/c/"/>
    
  </entry>
  
</feed>
